{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "button-dropdown",
  "type": "registry:component",
  "title": "Button Dropdown",
  "description": "A dropdown menu for buttons",
  "files": [
    {
      "path": "registry/default/components/dropdown-menu/button-dropdown.tsx",
      "content": "'use client'\r\n\r\nimport { Button } from '@/components/ui/button'\r\nimport {\r\n    DropdownMenu,\r\n    DropdownMenuCheckboxItem,\r\n    DropdownMenuContent,\r\n    DropdownMenuItem,\r\n    DropdownMenuLabel,\r\n    DropdownMenuSeparator,\r\n    DropdownMenuTrigger,\r\n} from '@/components/ui/dropdown-menu'\r\nimport { ChevronDownIcon, GitForkIcon } from 'lucide-react'\r\nimport React from 'react'\r\n\r\nconst options = [\r\n    { label: 'Fork Starterkits', value: 'fork-startkits' },\r\n    { label: 'Fork Components', value: 'fork-components' },\r\n    { label: 'Fork Blocks', value: 'fork-blocks' },\r\n    { label: 'Fork All', value: 'fork-all' },\r\n]\r\n\r\ntype ButtonDropdownProps = {\r\n    side: 'left' | 'right' | 'top' | 'bottom'\r\n    align: 'start' | 'center' | 'end'\r\n}\r\n\r\nexport default function ButtonDropdown({\r\n    side = 'bottom',\r\n    align = 'end',\r\n}: ButtonDropdownProps) {\r\n    const [value, setValue] = React.useState('fork-all')\r\n    const option = options.find((option) => option.value === value)\r\n\r\n    return (\r\n        <div className=\"flex items-center\">\r\n            <Button\r\n                variant=\"outline\"\r\n                className=\"cursor-pointer rounded-r-none border-r-0\"\r\n            >\r\n                <GitForkIcon />\r\n                {option?.label}\r\n            </Button>\r\n\r\n            <DropdownMenu>\r\n                <DropdownMenuTrigger asChild>\r\n                    <Button\r\n                        variant=\"outline\"\r\n                        size=\"icon\"\r\n                        className=\"cursor-pointer rounded-l-none\"\r\n                    >\r\n                        <ChevronDownIcon />\r\n                    </Button>\r\n                </DropdownMenuTrigger>\r\n                <DropdownMenuContent\r\n                    className=\"w-[220px]\"\r\n                    side={side}\r\n                    align={align}\r\n                >\r\n                    {options.map((option) => (\r\n                        <DropdownMenuCheckboxItem\r\n                            key={option.value}\r\n                            checked={value === option.value}\r\n                            onCheckedChange={() => setValue(option.value)}\r\n                        >\r\n                            {option.label}\r\n                        </DropdownMenuCheckboxItem>\r\n                    ))}\r\n                </DropdownMenuContent>\r\n            </DropdownMenu>\r\n        </div>\r\n    )\r\n}\r\n",
      "type": "registry:component",
      "target": "components/button-dropdown.tsx"
    }
  ]
}