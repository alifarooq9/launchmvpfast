{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "navbar-10",
  "type": "registry:block",
  "dependencies": [
    "lucide-react",
    "@radix-ui/react-slot",
    "class-variance-authority",
    "clsx",
    "tailwind-merge",
    "@radix-ui/react-navigation-menu",
    "@radix-ui/react-separator",
    "@radix-ui/react-select"
  ],
  "registryDependencies": [
    "utils",
    "navigation-menu",
    "button",
    "https://launchmvpfast.com/r/user-profile-dropdown.json",
    "separator",
    "select"
  ],
  "files": [
    {
      "path": "registry/default/blocks/navbar/navbar-10.tsx",
      "content": "'use client'\r\n\r\nimport React from 'react'\r\nimport { Button, buttonVariants } from '@/registry/default/ui/button'\r\nimport {\r\n    NavigationMenu,\r\n    NavigationMenuItem,\r\n    NavigationMenuLink,\r\n    NavigationMenuList,\r\n} from '@/registry/default/ui/navigation-menu'\r\nimport { Separator } from '@/registry/default/ui/separator'\r\nimport {\r\n    Select,\r\n    SelectContent,\r\n    SelectGroup,\r\n    SelectItem,\r\n    SelectLabel,\r\n} from '@/registry/default/ui/select'\r\nimport { cn } from '@/lib/utils'\r\nimport {\r\n    ChevronDownIcon,\r\n    HandbagIcon,\r\n    InfoIcon,\r\n    SearchIcon,\r\n} from 'lucide-react'\r\nimport { SelectTrigger } from '@radix-ui/react-select'\r\nimport UserProfileDropdown from './user-profile-dropdown'\r\n\r\n// import Link from 'next/link'\r\n\r\n// Sample navigation links, you can replace these with your actual links\r\nconst navigationLinks = [\r\n    { href: '#', label: 'Men', active: true },\r\n    { href: '#', label: 'Women' },\r\n    { href: '#', label: 'Kids' },\r\n    { href: '#', label: 'Store' },\r\n]\r\n\r\nconst currencies = [\r\n    { id: 'usd', name: 'USD', flag: 'ðŸ‡ºðŸ‡¸' },\r\n    { id: 'eur', name: 'EUR', flag: 'ðŸ‡ªðŸ‡º' },\r\n    { id: 'gbp', name: 'GBP', flag: 'ðŸ‡¬ðŸ‡§' },\r\n    { id: 'jpy', name: 'JPY', flag: 'ðŸ‡¯ðŸ‡µ' },\r\n    { id: 'cad', name: 'CAD', flag: 'ðŸ‡¨ðŸ‡¦' },\r\n]\r\n\r\nexport default function Navbar() {\r\n    const Link = 'a' // if using Next.js remove this line. you can use the Link component from 'next/link'\r\n\r\n    const totalItems = 0 // Replace with your logic to get the total number of items in the cart\r\n\r\n    const [selectedCurrency, setSelectedCurrency] = React.useState(\r\n        currencies[0].id\r\n    )\r\n    const selectCurrencyItem = currencies.find(\r\n        (currency) => currency.id === selectedCurrency\r\n    )\r\n\r\n    return (\r\n        <header className=\"mx-auto w-full\">\r\n            <div className=\"bg-primary text-primary-foreground flex h-8 items-center justify-center px-4 text-sm font-medium xl:px-6\">\r\n                <div className=\"flex flex-1 items-center justify-start\">\r\n                    <Select\r\n                        value={selectedCurrency}\r\n                        onValueChange={setSelectedCurrency}\r\n                    >\r\n                        <SelectTrigger\r\n                            className={cn(\r\n                                buttonVariants({\r\n                                    variant: 'link',\r\n                                    size: 'sm',\r\n                                }),\r\n                                'text-primary-foregrounds h-6 cursor-pointer hover:no-underline'\r\n                            )}\r\n                        >\r\n                            <span>{selectCurrencyItem?.flag}</span>\r\n                            <span>{selectCurrencyItem?.name}</span>\r\n                            <ChevronDownIcon />\r\n                        </SelectTrigger>\r\n                        <SelectContent align=\"start\">\r\n                            <SelectGroup>\r\n                                <SelectLabel>Currency</SelectLabel>\r\n                                {currencies.map((currency) => (\r\n                                    <SelectItem\r\n                                        key={currency.id}\r\n                                        value={currency.id}\r\n                                    >\r\n                                        <span>{currency.flag}</span>\r\n                                        <span>{currency.name}</span>\r\n                                    </SelectItem>\r\n                                ))}\r\n                            </SelectGroup>\r\n                        </SelectContent>\r\n                    </Select>\r\n                </div>\r\n                <div>\r\n                    <p>Get free delivery on orders over $100</p>\r\n                </div>\r\n                <div className=\"flex flex-1 items-center justify-end gap-2\">\r\n                    <Link\r\n                        href=\"#\"\r\n                        className={cn(\r\n                            buttonVariants({ variant: 'link', size: 'sm' }),\r\n                            'text-primary-foreground h-8 cursor-pointer'\r\n                        )}\r\n                    >\r\n                        Sign-in\r\n                    </Link>\r\n\r\n                    <Separator\r\n                        orientation=\"vertical\"\r\n                        className=\"bg-primary-foreground/15 data-[orientation=vertical]:h-4\"\r\n                    />\r\n\r\n                    <Link\r\n                        href=\"#\"\r\n                        className={cn(\r\n                            buttonVariants({ variant: 'link', size: 'sm' }),\r\n                            'text-primary-foreground h-8 cursor-pointer'\r\n                        )}\r\n                    >\r\n                        Create Account\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"bg-background flex h-16 items-center justify-between gap-4 border-b px-4 xl:px-6\">\r\n                <div className=\"flex items-center justify-start\">\r\n                    <Link\r\n                        href=\"#\"\r\n                        className={cn(\r\n                            buttonVariants({ variant: 'ghost', size: 'icon' }),\r\n                            \"dark:hover:bg-accent text-accent-foreground [&_svg:not([class*='size-'])]:size-6\"\r\n                        )}\r\n                    >\r\n                        <svg\r\n                            viewBox=\"0 0 40 40\"\r\n                            fill=\"none\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                        >\r\n                            <path\r\n                                d=\"M11.7699 21.8258L7.42207 20.485C5 19.9996 5 20 6.6277 17.875L9.77497 13.9892C10.4003 13.2172 11.3407 12.7687 12.3342 12.7687L19.2668 13.0726M11.7699 21.8258C11.7699 21.8258 12.8773 24.5436 14.1667 25.833C15.4561 27.1223 18.1738 28.2296 18.1738 28.2296M18.1738 28.2296L19.0938 32.0266C19.5 34.5 19.5 34.5 21.6117 33.0063L25.7725 30.2146C26.684 29.603 27.2308 28.5775 27.2308 27.4798L26.927 20.733M26.927 20.733C31.5822 16.4657 34.5802 12.4926 34.9962 6.59335C35.1164 4.8888 35.1377 4.88137 33.4062 5.00345C27.507 5.41937 23.534 8.4174 19.2668 13.0726M11.7699 31.6146C11.7699 33.4841 10.2544 34.9996 8.38495 34.9996H5V31.6146C5 29.7453 6.5155 28.2298 8.38495 28.2298C10.2544 28.2298 11.7699 29.7453 11.7699 31.6146Z\"\r\n                                fill=\"currentColor\"\r\n                            />\r\n                            <path\r\n                                d=\"M12.5 22.9996L11 20.4996C11 20.0996 16 12.9996 20 12.9996C22.1667 14.8329 26.1172 16.4682 27 19.9996C27.5 21.9996 21.5 26.1663 18.5 28.4996L12.5 22.9996Z\"\r\n                                fill=\"currentColor\"\r\n                            />\r\n                        </svg>\r\n                    </Link>\r\n                </div>\r\n\r\n                <NavigationMenu className=\"max-md:hidden\">\r\n                    <NavigationMenuList>\r\n                        {navigationLinks.map((link, index) => (\r\n                            <NavigationMenuItem key={index}>\r\n                                <NavigationMenuLink\r\n                                    href={link.href}\r\n                                    asChild\r\n                                    data-active={link.active}\r\n                                    className=\"h-8 rounded-md px-3 py-1.5 font-medium\"\r\n                                >\r\n                                    <Link>{link.label}</Link>\r\n                                </NavigationMenuLink>\r\n                            </NavigationMenuItem>\r\n                        ))}\r\n                    </NavigationMenuList>\r\n                </NavigationMenu>\r\n\r\n                <div className=\"flex flex-1 items-center justify-end gap-2\">\r\n                    <Link\r\n                        href=\"#\"\r\n                        className={cn(\r\n                            buttonVariants({ variant: 'ghost', size: 'sm' }),\r\n                            'size-8 cursor-pointer'\r\n                        )}\r\n                    >\r\n                        <InfoIcon />\r\n                        <span className=\"sr-only\">Info</span>\r\n                    </Link>\r\n\r\n                    <Separator\r\n                        orientation=\"vertical\"\r\n                        className=\"data-[orientation=vertical]:h-5\"\r\n                    />\r\n\r\n                    {/* search button, create your own search button dialog. or copy it from launchmvpfast components */}\r\n                    <Button\r\n                        variant=\"ghost\"\r\n                        size=\"sm\"\r\n                        className=\"size-8 cursor-pointer\"\r\n                    >\r\n                        <SearchIcon />\r\n                        <span className=\"sr-only\">Search</span>\r\n                    </Button>\r\n\r\n                    <Button\r\n                        variant=\"ghost\"\r\n                        size=\"sm\"\r\n                        className=\"h-8 cursor-pointer\"\r\n                    >\r\n                        <HandbagIcon />\r\n                        <span className=\"text-foreground/90 text-sm\">\r\n                            {totalItems}\r\n                        </span>\r\n                        <span className=\"sr-only\">Open cart</span>\r\n                    </Button>\r\n\r\n                    <Separator\r\n                        orientation=\"vertical\"\r\n                        className=\"mr-3 data-[orientation=vertical]:h-5\"\r\n                    />\r\n\r\n                    <UserProfileDropdown size={6} align=\"end\" />\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n",
      "type": "registry:component",
      "target": "components/navbar.tsx"
    },
    {
      "path": "registry\\default\\blocks\\navbar\\navbar-10.tsx",
      "content": "'use client'\r\n\r\nimport React from 'react'\r\nimport { Button, buttonVariants } from '@/registry/default/ui/button'\r\nimport {\r\n    NavigationMenu,\r\n    NavigationMenuItem,\r\n    NavigationMenuLink,\r\n    NavigationMenuList,\r\n} from '@/registry/default/ui/navigation-menu'\r\nimport { Separator } from '@/registry/default/ui/separator'\r\nimport {\r\n    Select,\r\n    SelectContent,\r\n    SelectGroup,\r\n    SelectItem,\r\n    SelectLabel,\r\n} from '@/registry/default/ui/select'\r\nimport { cn } from '@/lib/utils'\r\nimport {\r\n    ChevronDownIcon,\r\n    HandbagIcon,\r\n    InfoIcon,\r\n    SearchIcon,\r\n} from 'lucide-react'\r\nimport { SelectTrigger } from '@radix-ui/react-select'\r\nimport UserProfileDropdown from './user-profile-dropdown'\r\n\r\n// import Link from 'next/link'\r\n\r\n// Sample navigation links, you can replace these with your actual links\r\nconst navigationLinks = [\r\n    { href: '#', label: 'Men', active: true },\r\n    { href: '#', label: 'Women' },\r\n    { href: '#', label: 'Kids' },\r\n    { href: '#', label: 'Store' },\r\n]\r\n\r\nconst currencies = [\r\n    { id: 'usd', name: 'USD', flag: 'ðŸ‡ºðŸ‡¸' },\r\n    { id: 'eur', name: 'EUR', flag: 'ðŸ‡ªðŸ‡º' },\r\n    { id: 'gbp', name: 'GBP', flag: 'ðŸ‡¬ðŸ‡§' },\r\n    { id: 'jpy', name: 'JPY', flag: 'ðŸ‡¯ðŸ‡µ' },\r\n    { id: 'cad', name: 'CAD', flag: 'ðŸ‡¨ðŸ‡¦' },\r\n]\r\n\r\nexport default function Navbar() {\r\n    const Link = 'a' // if using Next.js remove this line. you can use the Link component from 'next/link'\r\n\r\n    const totalItems = 0 // Replace with your logic to get the total number of items in the cart\r\n\r\n    const [selectedCurrency, setSelectedCurrency] = React.useState(\r\n        currencies[0].id\r\n    )\r\n    const selectCurrencyItem = currencies.find(\r\n        (currency) => currency.id === selectedCurrency\r\n    )\r\n\r\n    return (\r\n        <header className=\"mx-auto w-full\">\r\n            <div className=\"bg-primary text-primary-foreground flex h-8 items-center justify-center px-4 text-sm font-medium xl:px-6\">\r\n                <div className=\"flex flex-1 items-center justify-start\">\r\n                    <Select\r\n                        value={selectedCurrency}\r\n                        onValueChange={setSelectedCurrency}\r\n                    >\r\n                        <SelectTrigger\r\n                            className={cn(\r\n                                buttonVariants({\r\n                                    variant: 'link',\r\n                                    size: 'sm',\r\n                                }),\r\n                                'text-primary-foregrounds h-6 cursor-pointer hover:no-underline'\r\n                            )}\r\n                        >\r\n                            <span>{selectCurrencyItem?.flag}</span>\r\n                            <span>{selectCurrencyItem?.name}</span>\r\n                            <ChevronDownIcon />\r\n                        </SelectTrigger>\r\n                        <SelectContent align=\"start\">\r\n                            <SelectGroup>\r\n                                <SelectLabel>Currency</SelectLabel>\r\n                                {currencies.map((currency) => (\r\n                                    <SelectItem\r\n                                        key={currency.id}\r\n                                        value={currency.id}\r\n                                    >\r\n                                        <span>{currency.flag}</span>\r\n                                        <span>{currency.name}</span>\r\n                                    </SelectItem>\r\n                                ))}\r\n                            </SelectGroup>\r\n                        </SelectContent>\r\n                    </Select>\r\n                </div>\r\n                <div>\r\n                    <p>Get free delivery on orders over $100</p>\r\n                </div>\r\n                <div className=\"flex flex-1 items-center justify-end gap-2\">\r\n                    <Link\r\n                        href=\"#\"\r\n                        className={cn(\r\n                            buttonVariants({ variant: 'link', size: 'sm' }),\r\n                            'text-primary-foreground h-8 cursor-pointer'\r\n                        )}\r\n                    >\r\n                        Sign-in\r\n                    </Link>\r\n\r\n                    <Separator\r\n                        orientation=\"vertical\"\r\n                        className=\"bg-primary-foreground/15 data-[orientation=vertical]:h-4\"\r\n                    />\r\n\r\n                    <Link\r\n                        href=\"#\"\r\n                        className={cn(\r\n                            buttonVariants({ variant: 'link', size: 'sm' }),\r\n                            'text-primary-foreground h-8 cursor-pointer'\r\n                        )}\r\n                    >\r\n                        Create Account\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"bg-background flex h-16 items-center justify-between gap-4 border-b px-4 xl:px-6\">\r\n                <div className=\"flex items-center justify-start\">\r\n                    <Link\r\n                        href=\"#\"\r\n                        className={cn(\r\n                            buttonVariants({ variant: 'ghost', size: 'icon' }),\r\n                            \"dark:hover:bg-accent text-accent-foreground [&_svg:not([class*='size-'])]:size-6\"\r\n                        )}\r\n                    >\r\n                        <svg\r\n                            viewBox=\"0 0 40 40\"\r\n                            fill=\"none\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                        >\r\n                            <path\r\n                                d=\"M11.7699 21.8258L7.42207 20.485C5 19.9996 5 20 6.6277 17.875L9.77497 13.9892C10.4003 13.2172 11.3407 12.7687 12.3342 12.7687L19.2668 13.0726M11.7699 21.8258C11.7699 21.8258 12.8773 24.5436 14.1667 25.833C15.4561 27.1223 18.1738 28.2296 18.1738 28.2296M18.1738 28.2296L19.0938 32.0266C19.5 34.5 19.5 34.5 21.6117 33.0063L25.7725 30.2146C26.684 29.603 27.2308 28.5775 27.2308 27.4798L26.927 20.733M26.927 20.733C31.5822 16.4657 34.5802 12.4926 34.9962 6.59335C35.1164 4.8888 35.1377 4.88137 33.4062 5.00345C27.507 5.41937 23.534 8.4174 19.2668 13.0726M11.7699 31.6146C11.7699 33.4841 10.2544 34.9996 8.38495 34.9996H5V31.6146C5 29.7453 6.5155 28.2298 8.38495 28.2298C10.2544 28.2298 11.7699 29.7453 11.7699 31.6146Z\"\r\n                                fill=\"currentColor\"\r\n                            />\r\n                            <path\r\n                                d=\"M12.5 22.9996L11 20.4996C11 20.0996 16 12.9996 20 12.9996C22.1667 14.8329 26.1172 16.4682 27 19.9996C27.5 21.9996 21.5 26.1663 18.5 28.4996L12.5 22.9996Z\"\r\n                                fill=\"currentColor\"\r\n                            />\r\n                        </svg>\r\n                    </Link>\r\n                </div>\r\n\r\n                <NavigationMenu className=\"max-md:hidden\">\r\n                    <NavigationMenuList>\r\n                        {navigationLinks.map((link, index) => (\r\n                            <NavigationMenuItem key={index}>\r\n                                <NavigationMenuLink\r\n                                    href={link.href}\r\n                                    asChild\r\n                                    data-active={link.active}\r\n                                    className=\"h-8 rounded-md px-3 py-1.5 font-medium\"\r\n                                >\r\n                                    <Link>{link.label}</Link>\r\n                                </NavigationMenuLink>\r\n                            </NavigationMenuItem>\r\n                        ))}\r\n                    </NavigationMenuList>\r\n                </NavigationMenu>\r\n\r\n                <div className=\"flex flex-1 items-center justify-end gap-2\">\r\n                    <Link\r\n                        href=\"#\"\r\n                        className={cn(\r\n                            buttonVariants({ variant: 'ghost', size: 'sm' }),\r\n                            'size-8 cursor-pointer'\r\n                        )}\r\n                    >\r\n                        <InfoIcon />\r\n                        <span className=\"sr-only\">Info</span>\r\n                    </Link>\r\n\r\n                    <Separator\r\n                        orientation=\"vertical\"\r\n                        className=\"data-[orientation=vertical]:h-5\"\r\n                    />\r\n\r\n                    {/* search button, create your own search button dialog. or copy it from launchmvpfast components */}\r\n                    <Button\r\n                        variant=\"ghost\"\r\n                        size=\"sm\"\r\n                        className=\"size-8 cursor-pointer\"\r\n                    >\r\n                        <SearchIcon />\r\n                        <span className=\"sr-only\">Search</span>\r\n                    </Button>\r\n\r\n                    <Button\r\n                        variant=\"ghost\"\r\n                        size=\"sm\"\r\n                        className=\"h-8 cursor-pointer\"\r\n                    >\r\n                        <HandbagIcon />\r\n                        <span className=\"text-foreground/90 text-sm\">\r\n                            {totalItems}\r\n                        </span>\r\n                        <span className=\"sr-only\">Open cart</span>\r\n                    </Button>\r\n\r\n                    <Separator\r\n                        orientation=\"vertical\"\r\n                        className=\"mr-3 data-[orientation=vertical]:h-5\"\r\n                    />\r\n\r\n                    <UserProfileDropdown size={6} align=\"end\" />\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "registry\\default\\ui\\button.tsx",
      "content": "import * as React from 'react'\r\nimport { Slot } from '@radix-ui/react-slot'\r\nimport { cva, type VariantProps } from 'class-variance-authority'\r\n\r\nimport { cn } from '@/lib/utils'\r\n\r\nconst buttonVariants = cva(\r\n    \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n    {\r\n        variants: {\r\n            variant: {\r\n                default:\r\n                    'bg-primary text-primary-foreground shadow-xs hover:bg-primary/90',\r\n                destructive:\r\n                    'bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60',\r\n                outline:\r\n                    'border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50',\r\n                secondary:\r\n                    'bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80',\r\n                ghost: 'hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50',\r\n                link: 'text-primary underline-offset-4 hover:underline',\r\n            },\r\n            size: {\r\n                default: 'h-9 px-4 py-2 has-[>svg]:px-3',\r\n                sm: 'h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5',\r\n                lg: 'h-10 rounded-md px-6 has-[>svg]:px-4',\r\n                icon: 'size-9',\r\n            },\r\n        },\r\n        defaultVariants: {\r\n            variant: 'default',\r\n            size: 'default',\r\n        },\r\n    }\r\n)\r\n\r\nfunction Button({\r\n    className,\r\n    variant,\r\n    size,\r\n    asChild = false,\r\n    ...props\r\n}: React.ComponentProps<'button'> &\r\n    VariantProps<typeof buttonVariants> & {\r\n        asChild?: boolean\r\n    }) {\r\n    const Comp = asChild ? Slot : 'button'\r\n\r\n    return (\r\n        <Comp\r\n            data-slot=\"button\"\r\n            className={cn(buttonVariants({ variant, size, className }))}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nexport { Button, buttonVariants }\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry\\default\\ui\\navigation-menu.tsx",
      "content": "import * as React from 'react'\r\nimport * as NavigationMenuPrimitive from '@radix-ui/react-navigation-menu'\r\nimport { cva } from 'class-variance-authority'\r\nimport { ChevronDownIcon } from 'lucide-react'\r\n\r\nimport { cn } from '@/lib/utils'\r\n\r\nfunction NavigationMenu({\r\n    className,\r\n    children,\r\n    viewport = true,\r\n    ...props\r\n}: React.ComponentProps<typeof NavigationMenuPrimitive.Root> & {\r\n    viewport?: boolean\r\n}) {\r\n    return (\r\n        <NavigationMenuPrimitive.Root\r\n            data-slot=\"navigation-menu\"\r\n            data-viewport={viewport}\r\n            className={cn(\r\n                'group/navigation-menu relative flex max-w-max flex-1 items-center justify-center',\r\n                className\r\n            )}\r\n            {...props}\r\n        >\r\n            {children}\r\n            {viewport && <NavigationMenuViewport />}\r\n        </NavigationMenuPrimitive.Root>\r\n    )\r\n}\r\n\r\nfunction NavigationMenuList({\r\n    className,\r\n    ...props\r\n}: React.ComponentProps<typeof NavigationMenuPrimitive.List>) {\r\n    return (\r\n        <NavigationMenuPrimitive.List\r\n            data-slot=\"navigation-menu-list\"\r\n            className={cn(\r\n                'group flex flex-1 list-none items-center justify-center gap-1',\r\n                className\r\n            )}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nfunction NavigationMenuItem({\r\n    className,\r\n    ...props\r\n}: React.ComponentProps<typeof NavigationMenuPrimitive.Item>) {\r\n    return (\r\n        <NavigationMenuPrimitive.Item\r\n            data-slot=\"navigation-menu-item\"\r\n            className={cn('relative', className)}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nconst navigationMenuTriggerStyle = cva(\r\n    'group inline-flex h-9 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground disabled:pointer-events-none disabled:opacity-50 data-[state=open]:hover:bg-accent data-[state=open]:text-accent-foreground data-[state=open]:focus:bg-accent data-[state=open]:bg-accent/50 focus-visible:ring-ring/50 outline-none transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1'\r\n)\r\n\r\nfunction NavigationMenuTrigger({\r\n    className,\r\n    children,\r\n    ...props\r\n}: React.ComponentProps<typeof NavigationMenuPrimitive.Trigger>) {\r\n    return (\r\n        <NavigationMenuPrimitive.Trigger\r\n            data-slot=\"navigation-menu-trigger\"\r\n            className={cn(navigationMenuTriggerStyle(), 'group', className)}\r\n            {...props}\r\n        >\r\n            {children}{' '}\r\n            <ChevronDownIcon\r\n                className=\"relative top-[1px] ml-1 size-3 transition duration-300 group-data-[state=open]:rotate-180\"\r\n                aria-hidden=\"true\"\r\n            />\r\n        </NavigationMenuPrimitive.Trigger>\r\n    )\r\n}\r\n\r\nfunction NavigationMenuContent({\r\n    className,\r\n    ...props\r\n}: React.ComponentProps<typeof NavigationMenuPrimitive.Content>) {\r\n    return (\r\n        <NavigationMenuPrimitive.Content\r\n            data-slot=\"navigation-menu-content\"\r\n            className={cn(\r\n                'data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 top-0 left-0 w-full p-2 pr-2.5 md:absolute md:w-auto',\r\n                'group-data-[viewport=false]/navigation-menu:bg-popover group-data-[viewport=false]/navigation-menu:text-popover-foreground group-data-[viewport=false]/navigation-menu:data-[state=open]:animate-in group-data-[viewport=false]/navigation-menu:data-[state=closed]:animate-out group-data-[viewport=false]/navigation-menu:data-[state=closed]:zoom-out-95 group-data-[viewport=false]/navigation-menu:data-[state=open]:zoom-in-95 group-data-[viewport=false]/navigation-menu:data-[state=open]:fade-in-0 group-data-[viewport=false]/navigation-menu:data-[state=closed]:fade-out-0 group-data-[viewport=false]/navigation-menu:top-full group-data-[viewport=false]/navigation-menu:mt-1.5 group-data-[viewport=false]/navigation-menu:overflow-hidden group-data-[viewport=false]/navigation-menu:rounded-md group-data-[viewport=false]/navigation-menu:border group-data-[viewport=false]/navigation-menu:shadow group-data-[viewport=false]/navigation-menu:duration-200 **:data-[slot=navigation-menu-link]:focus:ring-0 **:data-[slot=navigation-menu-link]:focus:outline-none',\r\n                className\r\n            )}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nfunction NavigationMenuViewport({\r\n    className,\r\n    ...props\r\n}: React.ComponentProps<typeof NavigationMenuPrimitive.Viewport>) {\r\n    return (\r\n        <div\r\n            className={cn(\r\n                'absolute top-full left-0 isolate z-50 flex justify-center'\r\n            )}\r\n        >\r\n            <NavigationMenuPrimitive.Viewport\r\n                data-slot=\"navigation-menu-viewport\"\r\n                className={cn(\r\n                    'origin-top-center bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border shadow md:w-[var(--radix-navigation-menu-viewport-width)]',\r\n                    className\r\n                )}\r\n                {...props}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction NavigationMenuLink({\r\n    className,\r\n    ...props\r\n}: React.ComponentProps<typeof NavigationMenuPrimitive.Link>) {\r\n    return (\r\n        <NavigationMenuPrimitive.Link\r\n            data-slot=\"navigation-menu-link\"\r\n            className={cn(\r\n                \"data-[active=true]:focus:bg-accent data-[active=true]:hover:bg-accent data-[active=true]:bg-accent/50 data-[active=true]:text-accent-foreground hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus-visible:ring-ring/50 [&_svg:not([class*='text-'])]:text-muted-foreground flex flex-col gap-1 rounded-sm p-2 text-sm transition-all outline-none focus-visible:ring-[3px] focus-visible:outline-1 [&_svg:not([class*='size-'])]:size-4\",\r\n                className\r\n            )}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nfunction NavigationMenuIndicator({\r\n    className,\r\n    ...props\r\n}: React.ComponentProps<typeof NavigationMenuPrimitive.Indicator>) {\r\n    return (\r\n        <NavigationMenuPrimitive.Indicator\r\n            data-slot=\"navigation-menu-indicator\"\r\n            className={cn(\r\n                'data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden',\r\n                className\r\n            )}\r\n            {...props}\r\n        >\r\n            <div className=\"bg-border relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm shadow-md\" />\r\n        </NavigationMenuPrimitive.Indicator>\r\n    )\r\n}\r\n\r\nexport {\r\n    NavigationMenu,\r\n    NavigationMenuList,\r\n    NavigationMenuItem,\r\n    NavigationMenuContent,\r\n    NavigationMenuTrigger,\r\n    NavigationMenuLink,\r\n    NavigationMenuIndicator,\r\n    NavigationMenuViewport,\r\n    navigationMenuTriggerStyle,\r\n}\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry\\default\\ui\\separator.tsx",
      "content": "'use client'\r\n\r\nimport * as React from 'react'\r\nimport * as SeparatorPrimitive from '@radix-ui/react-separator'\r\n\r\nimport { cn } from '@/lib/utils'\r\n\r\nfunction Separator({\r\n    className,\r\n    orientation = 'horizontal',\r\n    decorative = true,\r\n    ...props\r\n}: React.ComponentProps<typeof SeparatorPrimitive.Root>) {\r\n    return (\r\n        <SeparatorPrimitive.Root\r\n            data-slot=\"separator\"\r\n            decorative={decorative}\r\n            orientation={orientation}\r\n            className={cn(\r\n                'bg-border shrink-0 data-[orientation=horizontal]:h-px data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-px',\r\n                className\r\n            )}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nexport { Separator }\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry\\default\\ui\\select.tsx",
      "content": "'use client'\r\n\r\nimport * as React from 'react'\r\nimport * as SelectPrimitive from '@radix-ui/react-select'\r\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from 'lucide-react'\r\n\r\nimport { cn } from '@/lib/utils'\r\n\r\nfunction Select({\r\n    ...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\r\n    return <SelectPrimitive.Root data-slot=\"select\" {...props} />\r\n}\r\n\r\nfunction SelectGroup({\r\n    ...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\r\n    return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\r\n}\r\n\r\nfunction SelectValue({\r\n    ...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\r\n    return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\r\n}\r\n\r\nfunction SelectTrigger({\r\n    className,\r\n    size = 'default',\r\n    children,\r\n    ...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\r\n    size?: 'sm' | 'default'\r\n}) {\r\n    return (\r\n        <SelectPrimitive.Trigger\r\n            data-slot=\"select-trigger\"\r\n            data-size={size}\r\n            className={cn(\r\n                \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\r\n                className\r\n            )}\r\n            {...props}\r\n        >\r\n            {children}\r\n            <SelectPrimitive.Icon asChild>\r\n                <ChevronDownIcon className=\"size-4 opacity-50\" />\r\n            </SelectPrimitive.Icon>\r\n        </SelectPrimitive.Trigger>\r\n    )\r\n}\r\n\r\nfunction SelectContent({\r\n    className,\r\n    children,\r\n    position = 'popper',\r\n    ...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\r\n    return (\r\n        <SelectPrimitive.Portal>\r\n            <SelectPrimitive.Content\r\n                data-slot=\"select-content\"\r\n                className={cn(\r\n                    'bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md',\r\n                    position === 'popper' &&\r\n                        'data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1',\r\n                    className\r\n                )}\r\n                position={position}\r\n                {...props}\r\n            >\r\n                <SelectScrollUpButton />\r\n                <SelectPrimitive.Viewport\r\n                    className={cn(\r\n                        'p-1',\r\n                        position === 'popper' &&\r\n                            'h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1'\r\n                    )}\r\n                >\r\n                    {children}\r\n                </SelectPrimitive.Viewport>\r\n                <SelectScrollDownButton />\r\n            </SelectPrimitive.Content>\r\n        </SelectPrimitive.Portal>\r\n    )\r\n}\r\n\r\nfunction SelectLabel({\r\n    className,\r\n    ...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\r\n    return (\r\n        <SelectPrimitive.Label\r\n            data-slot=\"select-label\"\r\n            className={cn(\r\n                'text-muted-foreground px-2 py-1.5 text-xs',\r\n                className\r\n            )}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nfunction SelectItem({\r\n    className,\r\n    children,\r\n    ...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\r\n    return (\r\n        <SelectPrimitive.Item\r\n            data-slot=\"select-item\"\r\n            className={cn(\r\n                \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\r\n                className\r\n            )}\r\n            {...props}\r\n        >\r\n            <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\r\n                <SelectPrimitive.ItemIndicator>\r\n                    <CheckIcon className=\"size-4\" />\r\n                </SelectPrimitive.ItemIndicator>\r\n            </span>\r\n            <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\r\n        </SelectPrimitive.Item>\r\n    )\r\n}\r\n\r\nfunction SelectSeparator({\r\n    className,\r\n    ...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\r\n    return (\r\n        <SelectPrimitive.Separator\r\n            data-slot=\"select-separator\"\r\n            className={cn(\r\n                'bg-border pointer-events-none -mx-1 my-1 h-px',\r\n                className\r\n            )}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nfunction SelectScrollUpButton({\r\n    className,\r\n    ...props\r\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\r\n    return (\r\n        <SelectPrimitive.ScrollUpButton\r\n            data-slot=\"select-scroll-up-button\"\r\n            className={cn(\r\n                'flex cursor-default items-center justify-center py-1',\r\n                className\r\n            )}\r\n            {...props}\r\n        >\r\n            <ChevronUpIcon className=\"size-4\" />\r\n        </SelectPrimitive.ScrollUpButton>\r\n    )\r\n}\r\n\r\nfunction SelectScrollDownButton({\r\n    className,\r\n    ...props\r\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\r\n    return (\r\n        <SelectPrimitive.ScrollDownButton\r\n            data-slot=\"select-scroll-down-button\"\r\n            className={cn(\r\n                'flex cursor-default items-center justify-center py-1',\r\n                className\r\n            )}\r\n            {...props}\r\n        >\r\n            <ChevronDownIcon className=\"size-4\" />\r\n        </SelectPrimitive.ScrollDownButton>\r\n    )\r\n}\r\n\r\nexport {\r\n    Select,\r\n    SelectContent,\r\n    SelectGroup,\r\n    SelectItem,\r\n    SelectLabel,\r\n    SelectScrollDownButton,\r\n    SelectScrollUpButton,\r\n    SelectSeparator,\r\n    SelectTrigger,\r\n    SelectValue,\r\n}\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry\\default\\blocks\\navbar\\user-profile-dropdown.tsx",
      "content": "export { default } from '@/registry/default/components/dropdown-menu/user-profile-dropdown'\r\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "lib\\utils.ts",
      "content": "import { clsx, type ClassValue } from 'clsx'\r\nimport { twMerge } from 'tailwind-merge'\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n    return twMerge(clsx(inputs))\r\n}\r\n\r\nexport const convertRegistryPaths = (content: string): string => {\r\n    return content\r\n        .replace(/@\\/registry\\/default\\/ui/g, '@/components/ui')\r\n        .replace(/@\\/registry\\/default\\/hooks/g, '@/hooks')\r\n        .replace(/@\\/registry\\/default\\/lib/g, '@/lib')\r\n}\r\n",
      "type": "registry:lib",
      "target": ""
    }
  ]
}