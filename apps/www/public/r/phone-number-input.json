{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "phone-number-input",
  "type": "registry:component",
  "title": "Phone Number Input",
  "description": "A component for inputting phone numbers",
  "dependencies": [
    "react-phone-number-input",
    "lucide-react",
    "clsx",
    "tailwind-merge",
    "@radix-ui/react-select",
    "@radix-ui/react-label"
  ],
  "files": [
    {
      "path": "registry/default/components/input/phone-number-input.tsx",
      "content": "'use client'\r\n\r\nimport { cn } from '@/lib/utils'\r\nimport React from 'react'\r\nimport {\r\n    Country,\r\n    FlagProps,\r\n    getCountryCallingCode,\r\n} from 'react-phone-number-input'\r\nimport PhoneInput from 'react-phone-number-input'\r\nimport {\r\n    Select,\r\n    SelectContent,\r\n    SelectItem,\r\n    SelectTrigger,\r\n} from '@/components/ui/select'\r\nimport { Input } from '@/components/ui/input'\r\nimport flags from 'react-phone-number-input/flags'\r\nimport { PhoneIcon } from 'lucide-react'\r\nimport { Label } from '@/components/ui/label'\r\n\r\nexport default function PhoneNumberInput() {\r\n    const [value, setValue] = React.useState('')\r\n\r\n    return (\r\n        <div className=\"flex w-full max-w-4/5 flex-col gap-2\">\r\n            <Label>Phone number input</Label>\r\n\r\n            <PhoneInput\r\n                placeholder=\"Enter phone number\"\r\n                international\r\n                value={value}\r\n                onChange={(e) => setValue(e ?? '')}\r\n                inputComponent={InputComponent}\r\n                countrySelectComponent={CountrySelectComponent}\r\n                className=\"flex items-center justify-center\"\r\n                flagComponent={FlagComponent}\r\n            />\r\n\r\n            <p className=\"text-muted-foreground text-sm\">\r\n                Built with{' '}\r\n                <a\r\n                    href=\"https://catamphetamine.gitlab.io/react-phone-number-input/\"\r\n                    target=\"_blank\"\r\n                    className=\"underline underline-offset-4\"\r\n                    rel=\"noreferrer\"\r\n                >\r\n                    react-phone-number-input\r\n                </a>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction InputComponent({\r\n    className,\r\n    type,\r\n    ...props\r\n}: React.ComponentProps<'input'>) {\r\n    return (\r\n        <Input\r\n            type={type}\r\n            data-slot=\"input\"\r\n            className={cn(className, 'rounded-l-none')}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\ntype CountrySelectComponentProps = {\r\n    disabled?: boolean\r\n    value: Country\r\n    onChange: (value: Country) => void\r\n    options: { label: string; value: Country | undefined }[]\r\n}\r\n\r\nfunction CountrySelectComponent({\r\n    options,\r\n    value,\r\n    disabled,\r\n    onChange,\r\n}: CountrySelectComponentProps) {\r\n    return (\r\n        <Select value={value} onValueChange={onChange} disabled={disabled}>\r\n            <SelectTrigger className=\"w-fit rounded-r-none border-r-0\">\r\n                <FlagComponent\r\n                    country={value}\r\n                    countryName={value}\r\n                    aria-hidden=\"true\"\r\n                />\r\n            </SelectTrigger>\r\n            <SelectContent>\r\n                {options.map((option, index) => {\r\n                    if (!option.value) return null\r\n\r\n                    return (\r\n                        <SelectItem\r\n                            key={`${option.value || ''}-${index}`}\r\n                            value={option.value as string}\r\n                        >\r\n                            <FlagComponent\r\n                                country={option.value}\r\n                                countryName={option.label}\r\n                                aria-hidden=\"true\"\r\n                            />\r\n                            {option.label} +\r\n                            {option.value &&\r\n                                getCountryCallingCode(option.value)}\r\n                        </SelectItem>\r\n                    )\r\n                })}\r\n            </SelectContent>\r\n        </Select>\r\n    )\r\n}\r\n\r\nfunction FlagComponent({ country, countryName }: FlagProps) {\r\n    const Flag = flags[country]\r\n\r\n    return <span>{Flag ? <Flag title={countryName} /> : <PhoneIcon />}</span>\r\n}\r\n",
      "type": "registry:component",
      "target": "components/phone-number-input.tsx"
    },
    {
      "path": "registry\\default\\components\\input\\phone-number-input.tsx",
      "content": "'use client'\r\n\r\nimport { cn } from '@/lib/utils'\r\nimport React from 'react'\r\nimport {\r\n    Country,\r\n    FlagProps,\r\n    getCountryCallingCode,\r\n} from 'react-phone-number-input'\r\nimport PhoneInput from 'react-phone-number-input'\r\nimport {\r\n    Select,\r\n    SelectContent,\r\n    SelectItem,\r\n    SelectTrigger,\r\n} from '@/components/ui/select'\r\nimport { Input } from '@/components/ui/input'\r\nimport flags from 'react-phone-number-input/flags'\r\nimport { PhoneIcon } from 'lucide-react'\r\nimport { Label } from '@/components/ui/label'\r\n\r\nexport default function PhoneNumberInput() {\r\n    const [value, setValue] = React.useState('')\r\n\r\n    return (\r\n        <div className=\"flex w-full max-w-4/5 flex-col gap-2\">\r\n            <Label>Phone number input</Label>\r\n\r\n            <PhoneInput\r\n                placeholder=\"Enter phone number\"\r\n                international\r\n                value={value}\r\n                onChange={(e) => setValue(e ?? '')}\r\n                inputComponent={InputComponent}\r\n                countrySelectComponent={CountrySelectComponent}\r\n                className=\"flex items-center justify-center\"\r\n                flagComponent={FlagComponent}\r\n            />\r\n\r\n            <p className=\"text-muted-foreground text-sm\">\r\n                Built with{' '}\r\n                <a\r\n                    href=\"https://catamphetamine.gitlab.io/react-phone-number-input/\"\r\n                    target=\"_blank\"\r\n                    className=\"underline underline-offset-4\"\r\n                    rel=\"noreferrer\"\r\n                >\r\n                    react-phone-number-input\r\n                </a>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction InputComponent({\r\n    className,\r\n    type,\r\n    ...props\r\n}: React.ComponentProps<'input'>) {\r\n    return (\r\n        <Input\r\n            type={type}\r\n            data-slot=\"input\"\r\n            className={cn(className, 'rounded-l-none')}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\ntype CountrySelectComponentProps = {\r\n    disabled?: boolean\r\n    value: Country\r\n    onChange: (value: Country) => void\r\n    options: { label: string; value: Country | undefined }[]\r\n}\r\n\r\nfunction CountrySelectComponent({\r\n    options,\r\n    value,\r\n    disabled,\r\n    onChange,\r\n}: CountrySelectComponentProps) {\r\n    return (\r\n        <Select value={value} onValueChange={onChange} disabled={disabled}>\r\n            <SelectTrigger className=\"w-fit rounded-r-none border-r-0\">\r\n                <FlagComponent\r\n                    country={value}\r\n                    countryName={value}\r\n                    aria-hidden=\"true\"\r\n                />\r\n            </SelectTrigger>\r\n            <SelectContent>\r\n                {options.map((option, index) => {\r\n                    if (!option.value) return null\r\n\r\n                    return (\r\n                        <SelectItem\r\n                            key={`${option.value || ''}-${index}`}\r\n                            value={option.value as string}\r\n                        >\r\n                            <FlagComponent\r\n                                country={option.value}\r\n                                countryName={option.label}\r\n                                aria-hidden=\"true\"\r\n                            />\r\n                            {option.label} +\r\n                            {option.value &&\r\n                                getCountryCallingCode(option.value)}\r\n                        </SelectItem>\r\n                    )\r\n                })}\r\n            </SelectContent>\r\n        </Select>\r\n    )\r\n}\r\n\r\nfunction FlagComponent({ country, countryName }: FlagProps) {\r\n    const Flag = flags[country]\r\n\r\n    return <span>{Flag ? <Flag title={countryName} /> : <PhoneIcon />}</span>\r\n}\r\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "lib\\utils.ts",
      "content": "import { clsx, type ClassValue } from 'clsx'\r\nimport { twMerge } from 'tailwind-merge'\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n    return twMerge(clsx(inputs))\r\n}\r\n\r\nexport const convertRegistryPaths = (content: string): string => {\r\n    return content\r\n        .replace(/@\\/registry\\/default\\/ui/g, '@/components/ui')\r\n        .replace(/@\\/registry\\/default\\/hooks/g, '@/hooks')\r\n        .replace(/@\\/registry\\/default\\/lib/g, '@/lib')\r\n}\r\n",
      "type": "registry:lib",
      "target": ""
    },
    {
      "path": "components\\ui\\select.tsx",
      "content": "'use client'\r\n\r\nimport * as React from 'react'\r\nimport * as SelectPrimitive from '@radix-ui/react-select'\r\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from 'lucide-react'\r\n\r\nimport { cn } from '@/lib/utils'\r\n\r\nfunction Select({\r\n    ...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\r\n    return <SelectPrimitive.Root data-slot=\"select\" {...props} />\r\n}\r\n\r\nfunction SelectGroup({\r\n    ...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\r\n    return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\r\n}\r\n\r\nfunction SelectValue({\r\n    ...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\r\n    return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\r\n}\r\n\r\nfunction SelectTrigger({\r\n    className,\r\n    size = 'default',\r\n    children,\r\n    ...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\r\n    size?: 'sm' | 'default'\r\n}) {\r\n    return (\r\n        <SelectPrimitive.Trigger\r\n            data-slot=\"select-trigger\"\r\n            data-size={size}\r\n            className={cn(\r\n                \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\r\n                className\r\n            )}\r\n            {...props}\r\n        >\r\n            {children}\r\n            <SelectPrimitive.Icon asChild>\r\n                <ChevronDownIcon className=\"size-4 opacity-50\" />\r\n            </SelectPrimitive.Icon>\r\n        </SelectPrimitive.Trigger>\r\n    )\r\n}\r\n\r\nfunction SelectContent({\r\n    className,\r\n    children,\r\n    position = 'popper',\r\n    ...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\r\n    return (\r\n        <SelectPrimitive.Portal>\r\n            <SelectPrimitive.Content\r\n                data-slot=\"select-content\"\r\n                className={cn(\r\n                    'bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md',\r\n                    position === 'popper' &&\r\n                        'data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1',\r\n                    className\r\n                )}\r\n                position={position}\r\n                {...props}\r\n            >\r\n                <SelectScrollUpButton />\r\n                <SelectPrimitive.Viewport\r\n                    className={cn(\r\n                        'p-1',\r\n                        position === 'popper' &&\r\n                            'h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1'\r\n                    )}\r\n                >\r\n                    {children}\r\n                </SelectPrimitive.Viewport>\r\n                <SelectScrollDownButton />\r\n            </SelectPrimitive.Content>\r\n        </SelectPrimitive.Portal>\r\n    )\r\n}\r\n\r\nfunction SelectLabel({\r\n    className,\r\n    ...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\r\n    return (\r\n        <SelectPrimitive.Label\r\n            data-slot=\"select-label\"\r\n            className={cn(\r\n                'text-muted-foreground px-2 py-1.5 text-xs',\r\n                className\r\n            )}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nfunction SelectItem({\r\n    className,\r\n    children,\r\n    ...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\r\n    return (\r\n        <SelectPrimitive.Item\r\n            data-slot=\"select-item\"\r\n            className={cn(\r\n                \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\r\n                className\r\n            )}\r\n            {...props}\r\n        >\r\n            <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\r\n                <SelectPrimitive.ItemIndicator>\r\n                    <CheckIcon className=\"size-4\" />\r\n                </SelectPrimitive.ItemIndicator>\r\n            </span>\r\n            <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\r\n        </SelectPrimitive.Item>\r\n    )\r\n}\r\n\r\nfunction SelectSeparator({\r\n    className,\r\n    ...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\r\n    return (\r\n        <SelectPrimitive.Separator\r\n            data-slot=\"select-separator\"\r\n            className={cn(\r\n                'bg-border pointer-events-none -mx-1 my-1 h-px',\r\n                className\r\n            )}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nfunction SelectScrollUpButton({\r\n    className,\r\n    ...props\r\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\r\n    return (\r\n        <SelectPrimitive.ScrollUpButton\r\n            data-slot=\"select-scroll-up-button\"\r\n            className={cn(\r\n                'flex cursor-default items-center justify-center py-1',\r\n                className\r\n            )}\r\n            {...props}\r\n        >\r\n            <ChevronUpIcon className=\"size-4\" />\r\n        </SelectPrimitive.ScrollUpButton>\r\n    )\r\n}\r\n\r\nfunction SelectScrollDownButton({\r\n    className,\r\n    ...props\r\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\r\n    return (\r\n        <SelectPrimitive.ScrollDownButton\r\n            data-slot=\"select-scroll-down-button\"\r\n            className={cn(\r\n                'flex cursor-default items-center justify-center py-1',\r\n                className\r\n            )}\r\n            {...props}\r\n        >\r\n            <ChevronDownIcon className=\"size-4\" />\r\n        </SelectPrimitive.ScrollDownButton>\r\n    )\r\n}\r\n\r\nexport {\r\n    Select,\r\n    SelectContent,\r\n    SelectGroup,\r\n    SelectItem,\r\n    SelectLabel,\r\n    SelectScrollDownButton,\r\n    SelectScrollUpButton,\r\n    SelectSeparator,\r\n    SelectTrigger,\r\n    SelectValue,\r\n}\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "components\\ui\\input.tsx",
      "content": "import * as React from 'react'\r\n\r\nimport { cn } from '@/lib/utils'\r\n\r\nfunction Input({ className, type, ...props }: React.ComponentProps<'input'>) {\r\n    return (\r\n        <input\r\n            type={type}\r\n            data-slot=\"input\"\r\n            className={cn(\r\n                'file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\r\n                'focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]',\r\n                'aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive',\r\n                className\r\n            )}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nexport { Input }\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "components\\ui\\label.tsx",
      "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Label({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\r\n  return (\r\n    <LabelPrimitive.Root\r\n      data-slot=\"label\"\r\n      className={cn(\r\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Label }\r\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}