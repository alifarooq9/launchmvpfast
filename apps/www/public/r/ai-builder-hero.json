{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "ai-builder-hero",
  "type": "registry:block",
  "title": "AI Builder Hero",
  "description": "A hero section designed for AI builder applications",
  "files": [
    {
      "path": "registry/default/blocks/hero-sections/ai-builder-hero/hero.tsx",
      "content": "'use client'\r\n\r\nimport Line from '@/registry/default/blocks/hero-sections/ai-builder-hero/line'\r\nimport Header from '@/registry/default/blocks/hero-sections/ai-builder-hero/header'\r\nimport PromptInput02 from '@/registry/default/components/input/prompt-input-02'\r\nimport { motion as m, Variants } from 'motion/react'\r\n\r\nconst quickPrompts = [\r\n    {\r\n        label: 'Logo',\r\n        value: 'Generate a logo for a tech startup',\r\n    },\r\n    {\r\n        label: 'Poster',\r\n        value: 'Create a poster for an upcoming event',\r\n    },\r\n    {\r\n        label: 'Business Card',\r\n        value: 'Design a business card for a freelance designer',\r\n    },\r\n    {\r\n        label: 'Landing Page',\r\n        value: 'Design a landing page for a new product launch',\r\n    },\r\n]\r\n\r\nconst staggerDelay = 0.2\r\nconst initialDelay = 0.2 // initial delay before the first element animates\r\n\r\nconst variants = {\r\n    hidden: () => ({\r\n        opacity: 0,\r\n        filter: 'blur(10px)',\r\n        transform: 'scale(0.95)',\r\n    }),\r\n    visible: (custom: number) => ({\r\n        opacity: 1,\r\n        transform: 'scale(1)',\r\n        filter: 'blur(0)',\r\n        transition: {\r\n            delay: custom * staggerDelay + initialDelay,\r\n            duration: 0.4,\r\n            ease: 'easeInOut',\r\n        },\r\n    }),\r\n}\r\n\r\nexport default function Hero() {\r\n    return (\r\n        <div className=\"flex min-h-svh w-full flex-col\">\r\n            {/* header */}\r\n            <Header />\r\n\r\n            {/* hero section */}\r\n            <section className=\"flex h-full flex-1 flex-col items-center justify-center border-x\">\r\n                <div className=\"container-line-wrapper h-36\" />\r\n                <Line />\r\n                <h1 className=\"container-line-wrapper px-4 py-6 text-center text-3xl font-bold md:text-5xl\">\r\n                    <m.span\r\n                        initial=\"hidden\"\r\n                        animate=\"visible\"\r\n                        custom={0}\r\n                        variants={variants as Variants}\r\n                    >\r\n                        Create\r\n                    </m.span>{' '}\r\n                    <m.span\r\n                        initial=\"hidden\"\r\n                        animate=\"visible\"\r\n                        custom={1}\r\n                        variants={variants as Variants}\r\n                    >\r\n                        Stunning\r\n                    </m.span>{' '}\r\n                    <m.span\r\n                        initial=\"hidden\"\r\n                        animate=\"visible\"\r\n                        custom={2}\r\n                        variants={variants as Variants}\r\n                    >\r\n                        Visuals\r\n                    </m.span>\r\n                </h1>\r\n                <Line />\r\n                <div className=\"container-line-wrapper bg-muted/70 flex w-full flex-col items-center justify-center p-4\">\r\n                    <m.div\r\n                        initial=\"hidden\"\r\n                        animate=\"visible\"\r\n                        custom={3}\r\n                        variants={variants as Variants}\r\n                        className=\"w-full\"\r\n                    >\r\n                        <PromptInput02 quickPrompts={quickPrompts} />\r\n                    </m.div>\r\n                </div>\r\n                <Line />\r\n                <StarterTemplate />\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction StarterTemplate() {\r\n    return (\r\n        <div className=\"container-line-wrapper flex-1 p-4 xl:px-6\">\r\n            <m.h2\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n                custom={4}\r\n                variants={variants as Variants}\r\n                className=\"font-semibold\"\r\n            >\r\n                Browse Templates\r\n            </m.h2>\r\n\r\n            <div className=\"mt-4 grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3\">\r\n                {templates.map((template, index) => (\r\n                    <m.button\r\n                        initial=\"hidden\"\r\n                        animate=\"visible\"\r\n                        custom={5 + index}\r\n                        variants={variants as Variants}\r\n                        key={template.title}\r\n                        className=\"border-border bg-card hover:bg-card/50 flex flex-col items-start rounded-lg border p-4 transition-all\"\r\n                    >\r\n                        <template.icon className=\"size-6\" />\r\n                        <h3 className=\"mt-3 text-left text-sm font-medium\">\r\n                            {template.title}\r\n                        </h3>\r\n                        <p className=\"text-muted-foreground mt-1 text-left text-sm\">\r\n                            {template.description}\r\n                        </p>\r\n                    </m.button>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype IconProps = React.HTMLAttributes<SVGElement>\r\n\r\nconst templates = [\r\n    {\r\n        title: 'Next.js',\r\n        description: 'A React framework for production',\r\n        icon: (props: IconProps) => (\r\n            <svg\r\n                width=\"1em\"\r\n                height=\"1em\"\r\n                viewBox=\"0 0 180 180\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                {...props}\r\n            >\r\n                <mask\r\n                    id=\"mask0_408_139\"\r\n                    style={{\r\n                        maskType: 'alpha',\r\n                    }}\r\n                    maskUnits=\"userSpaceOnUse\"\r\n                    x={0}\r\n                    y={0}\r\n                    width={180}\r\n                    height={180}\r\n                >\r\n                    <circle cx={90} cy={90} r={90} fill=\"black\" />\r\n                </mask>\r\n                <g mask=\"url(#mask0_408_139)\">\r\n                    <circle\r\n                        cx={90}\r\n                        cy={90}\r\n                        r={87}\r\n                        fill=\"black\"\r\n                        stroke=\"white\"\r\n                        strokeWidth={6}\r\n                    />\r\n                    <path\r\n                        d=\"M149.508 157.52L69.142 54H54V125.97H66.1136V69.3836L139.999 164.845C143.333 162.614 146.509 160.165 149.508 157.52Z\"\r\n                        fill=\"url(#paint0_linear_408_139)\"\r\n                    />\r\n                    <rect\r\n                        x={115}\r\n                        y={54}\r\n                        width={12}\r\n                        height={72}\r\n                        fill=\"url(#paint1_linear_408_139)\"\r\n                    />\r\n                </g>\r\n                <defs>\r\n                    <linearGradient\r\n                        id=\"paint0_linear_408_139\"\r\n                        x1={109}\r\n                        y1={116.5}\r\n                        x2={144.5}\r\n                        y2={160.5}\r\n                        gradientUnits=\"userSpaceOnUse\"\r\n                    >\r\n                        <stop stopColor=\"white\" />\r\n                        <stop offset={1} stopColor=\"white\" stopOpacity={0} />\r\n                    </linearGradient>\r\n                    <linearGradient\r\n                        id=\"paint1_linear_408_139\"\r\n                        x1={121}\r\n                        y1={54}\r\n                        x2={120.799}\r\n                        y2={106.875}\r\n                        gradientUnits=\"userSpaceOnUse\"\r\n                    >\r\n                        <stop stopColor=\"white\" />\r\n                        <stop offset={1} stopColor=\"white\" stopOpacity={0} />\r\n                    </linearGradient>\r\n                </defs>\r\n            </svg>\r\n        ),\r\n    },\r\n    {\r\n        title: 'Supabase',\r\n        description: 'Open source Firebase alternative',\r\n        icon: (props: IconProps) => (\r\n            <svg\r\n                viewBox=\"0 0 109 113\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"1em\"\r\n                height=\"1em\"\r\n                {...props}\r\n            >\r\n                <path\r\n                    d=\"M63.7076 110.284C60.8481 113.885 55.0502 111.912 54.9813 107.314L53.9738 40.0627L99.1935 40.0627C107.384 40.0627 111.952 49.5228 106.859 55.9374L63.7076 110.284Z\"\r\n                    fill=\"url(#paint0_linear)\"\r\n                />\r\n                <path\r\n                    d=\"M63.7076 110.284C60.8481 113.885 55.0502 111.912 54.9813 107.314L53.9738 40.0627L99.1935 40.0627C107.384 40.0627 111.952 49.5228 106.859 55.9374L63.7076 110.284Z\"\r\n                    fill=\"url(#paint1_linear)\"\r\n                    fillOpacity={0.2}\r\n                />\r\n                <path\r\n                    d=\"M45.317 2.07103C48.1765 -1.53037 53.9745 0.442937 54.0434 5.041L54.4849 72.2922H9.83113C1.64038 72.2922 -2.92775 62.8321 2.1655 56.4175L45.317 2.07103Z\"\r\n                    fill=\"#3ECF8E\"\r\n                />\r\n                <defs>\r\n                    <linearGradient\r\n                        id=\"paint0_linear\"\r\n                        x1={53.9738}\r\n                        y1={54.974}\r\n                        x2={94.1635}\r\n                        y2={71.8295}\r\n                        gradientUnits=\"userSpaceOnUse\"\r\n                    >\r\n                        <stop stopColor=\"#249361\" />\r\n                        <stop offset={1} stopColor=\"#3ECF8E\" />\r\n                    </linearGradient>\r\n                    <linearGradient\r\n                        id=\"paint1_linear\"\r\n                        x1={36.1558}\r\n                        y1={30.578}\r\n                        x2={54.4844}\r\n                        y2={65.0806}\r\n                        gradientUnits=\"userSpaceOnUse\"\r\n                    >\r\n                        <stop />\r\n                        <stop offset={1} stopOpacity={0} />\r\n                    </linearGradient>\r\n                </defs>\r\n            </svg>\r\n        ),\r\n    },\r\n    {\r\n        title: 'Neon',\r\n        description: 'Serverless Postgres database',\r\n        icon: (props: IconProps) => (\r\n            <svg\r\n                viewBox=\"0 0 256 256\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"1em\"\r\n                height=\"1em\"\r\n                preserveAspectRatio=\"xMidYMid\"\r\n                {...props}\r\n            >\r\n                <defs>\r\n                    <linearGradient\r\n                        id=\"a\"\r\n                        x1=\"100%\"\r\n                        x2=\"12.069%\"\r\n                        y1=\"100%\"\r\n                        y2=\"0%\"\r\n                    >\r\n                        <stop offset=\"0%\" stopColor=\"#62F755\" />\r\n                        <stop\r\n                            offset=\"100%\"\r\n                            stopColor=\"#8FF986\"\r\n                            stopOpacity={0}\r\n                        />\r\n                    </linearGradient>\r\n                    <linearGradient\r\n                        id=\"b\"\r\n                        x1=\"100%\"\r\n                        x2=\"40.603%\"\r\n                        y1=\"100%\"\r\n                        y2=\"76.897%\"\r\n                    >\r\n                        <stop offset=\"0%\" stopOpacity={0.9} />\r\n                        <stop\r\n                            offset=\"100%\"\r\n                            stopColor=\"#1A1A1A\"\r\n                            stopOpacity={0}\r\n                        />\r\n                    </linearGradient>\r\n                </defs>\r\n                <path\r\n                    fill=\"#00E0D9\"\r\n                    d=\"M0 44.139C0 19.762 19.762 0 44.139 0H211.86C236.238 0 256 19.762 256 44.139v142.649c0 25.216-31.915 36.16-47.388 16.256l-48.392-62.251v75.484c0 21.939-17.784 39.723-39.722 39.723h-76.36C19.763 256 0 236.238 0 211.861V44.14Zm44.139-8.825c-4.879 0-8.825 3.946-8.825 8.818v167.73c0 4.878 3.946 8.831 8.818 8.831h77.688c2.44 0 3.087-1.977 3.087-4.416v-101.22c0-25.222 31.914-36.166 47.395-16.255l48.391 62.243V44.14c0-4.879.455-8.825-4.416-8.825H44.14Z\"\r\n                />\r\n                <path\r\n                    fill=\"url(#a)\"\r\n                    d=\"M0 44.139C0 19.762 19.762 0 44.139 0H211.86C236.238 0 256 19.762 256 44.139v142.649c0 25.216-31.915 36.16-47.388 16.256l-48.392-62.251v75.484c0 21.939-17.784 39.723-39.722 39.723h-76.36C19.763 256 0 236.238 0 211.861V44.14Zm44.139-8.825c-4.879 0-8.825 3.946-8.825 8.818v167.73c0 4.878 3.946 8.831 8.818 8.831h77.688c2.44 0 3.087-1.977 3.087-4.416v-101.22c0-25.222 31.914-36.166 47.395-16.255l48.391 62.243V44.14c0-4.879.455-8.825-4.416-8.825H44.14Z\"\r\n                />\r\n                <path\r\n                    fill=\"url(#b)\"\r\n                    fillOpacity={0.4}\r\n                    d=\"M0 44.139C0 19.762 19.762 0 44.139 0H211.86C236.238 0 256 19.762 256 44.139v142.649c0 25.216-31.915 36.16-47.388 16.256l-48.392-62.251v75.484c0 21.939-17.784 39.723-39.722 39.723h-76.36C19.763 256 0 236.238 0 211.861V44.14Zm44.139-8.825c-4.879 0-8.825 3.946-8.825 8.818v167.73c0 4.878 3.946 8.831 8.818 8.831h77.688c2.44 0 3.087-1.977 3.087-4.416v-101.22c0-25.222 31.914-36.166 47.395-16.255l48.391 62.243V44.14c0-4.879.455-8.825-4.416-8.825H44.14Z\"\r\n                />\r\n                <path\r\n                    fill=\"#63F655\"\r\n                    d=\"M211.861 0C236.238 0 256 19.762 256 44.139v142.649c0 25.216-31.915 36.16-47.388 16.256l-48.392-62.251v75.484c0 21.939-17.784 39.723-39.722 39.723a4.409 4.409 0 0 0 4.409-4.409V115.058c0-25.223 31.914-36.167 47.395-16.256l48.391 62.243V8.825c0-4.871-3.953-8.825-8.832-8.825Z\"\r\n                />\r\n            </svg>\r\n        ),\r\n    },\r\n    {\r\n        title: 'Vercel',\r\n        description: 'Platform for frontend frameworks and static sites',\r\n        icon: (props: IconProps) => (\r\n            <svg\r\n                viewBox=\"0 0 256 222\"\r\n                width=\"1em\"\r\n                height=\"1em\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                preserveAspectRatio=\"xMidYMid\"\r\n                {...props}\r\n            >\r\n                <path fill=\"#fff\" d=\"m128 0 128 221.705H0z\" />\r\n            </svg>\r\n        ),\r\n    },\r\n    {\r\n        title: 'Upstash',\r\n        description: 'Serverless Redis and Kafka',\r\n        icon: (props: IconProps) => (\r\n            <svg\r\n                viewBox=\"0 0 256 341\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"1em\"\r\n                height=\"1em\"\r\n                preserveAspectRatio=\"xMidYMid\"\r\n                {...props}\r\n            >\r\n                <path\r\n                    fill=\"#00C98D\"\r\n                    d=\"M0 298.417c56.554 56.553 148.247 56.553 204.801 0 56.554-56.554 56.554-148.247 0-204.801l-25.6 25.6c42.415 42.416 42.415 111.185 0 153.6-42.416 42.416-111.185 42.416-153.601 0L0 298.416Z\"\r\n                />\r\n                <path\r\n                    fill=\"#00C98D\"\r\n                    d=\"M51.2 247.216c28.277 28.277 74.123 28.277 102.4 0 28.277-28.276 28.277-74.123 0-102.4l-25.6 25.6c14.14 14.138 14.14 37.061 0 51.2-14.138 14.139-37.061 14.139-51.2 0l-25.6 25.6ZM256 42.415c-56.554-56.553-148.247-56.553-204.8 0-56.555 56.555-56.555 148.247 0 204.801l25.599-25.6c-42.415-42.415-42.415-111.185 0-153.6 42.416-42.416 111.185-42.416 153.6 0L256 42.416Z\"\r\n                />\r\n                <path\r\n                    fill=\"#00C98D\"\r\n                    d=\"M204.8 93.616c-28.276-28.277-74.124-28.277-102.4 0-28.278 28.277-28.278 74.123 0 102.4l25.6-25.6c-14.14-14.138-14.14-37.061 0-51.2 14.138-14.139 37.06-14.139 51.2 0l25.6-25.6Z\"\r\n                />\r\n                <path\r\n                    fill=\"#FFF\"\r\n                    fillOpacity={0.4}\r\n                    d=\"M256 42.415c-56.554-56.553-148.247-56.553-204.8 0-56.555 56.555-56.555 148.247 0 204.801l25.599-25.6c-42.415-42.415-42.415-111.185 0-153.6 42.416-42.416 111.185-42.416 153.6 0L256 42.416Z\"\r\n                />\r\n                <path\r\n                    fill=\"#FFF\"\r\n                    fillOpacity={0.4}\r\n                    d=\"M204.8 93.616c-28.276-28.277-74.124-28.277-102.4 0-28.278 28.277-28.278 74.123 0 102.4l25.6-25.6c-14.14-14.138-14.14-37.061 0-51.2 14.138-14.139 37.06-14.139 51.2 0l25.6-25.6Z\"\r\n                />\r\n            </svg>\r\n        ),\r\n    },\r\n]\r\n",
      "type": "registry:component",
      "target": "components/hero.tsx"
    },
    {
      "path": "registry/default/blocks/hero-sections/ai-builder-hero/header.tsx",
      "content": "'use client'\r\n\r\nimport { Button, buttonVariants } from '@/components/ui/button'\r\nimport { cn } from '@/lib/utils'\r\nimport Link, { LinkProps } from 'next/link'\r\nimport React from 'react'\r\nimport {\r\n    Popover,\r\n    PopoverContent,\r\n    PopoverTrigger,\r\n} from '@/components/ui/popover'\r\n\r\nconst navLinks = [\r\n    {\r\n        href: '#',\r\n        label: 'Features',\r\n    },\r\n    {\r\n        href: '#',\r\n        label: 'About',\r\n    },\r\n    {\r\n        href: '#',\r\n        label: 'Pricing',\r\n    },\r\n    {\r\n        href: '#',\r\n        label: 'Contact',\r\n    },\r\n    {\r\n        href: '#',\r\n        label: 'Teams',\r\n    },\r\n]\r\n\r\nexport default function Header() {\r\n    return (\r\n        <header className=\"bg-background sticky top-0 z-20 grid h-14 w-full grid-cols-2 gap-4 border-b px-4 md:grid-cols-5 xl:px-6\">\r\n            <div className=\"flex items-center justify-start gap-4\">\r\n                <MobileNav />\r\n                <Link\r\n                    href=\"#\"\r\n                    className=\"focus-visible:border-ring focus-visible:ring-ring/50 flex text-lg font-bold outline-none focus-visible:ring-[3px]\"\r\n                >\r\n                    Acme\r\n                </Link>\r\n            </div>\r\n\r\n            <nav className=\"col-span-3 hidden place-items-center md:grid\">\r\n                <ul className=\"flex items-center gap-2\">\r\n                    {navLinks.map((link) => (\r\n                        <li key={link.label} className=\"inline-block\">\r\n                            <Link\r\n                                href={link.href}\r\n                                className={cn(\r\n                                    buttonVariants({\r\n                                        variant: 'ghost',\r\n                                        size: 'sm',\r\n                                    })\r\n                                )}\r\n                            >\r\n                                {link.label}\r\n                            </Link>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </nav>\r\n\r\n            <div className=\"flex items-center justify-end gap-2\">\r\n                <Link\r\n                    href=\"#\"\r\n                    className={cn(\r\n                        buttonVariants({ variant: 'ghost', size: 'sm' })\r\n                    )}\r\n                >\r\n                    Log in\r\n                </Link>\r\n                <Link href=\"#\" className={cn(buttonVariants({ size: 'sm' }))}>\r\n                    Sign up\r\n                </Link>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nfunction MobileNav() {\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    return (\r\n        <Popover open={open} onOpenChange={setOpen}>\r\n            <PopoverTrigger asChild>\r\n                <Button\r\n                    variant=\"ghost\"\r\n                    className={cn(\r\n                        'extend-touch-target block h-8 touch-manipulation items-center justify-start gap-2.5 !p-0 hover:bg-transparent focus-visible:bg-transparent focus-visible:ring-0 active:bg-transparent md:hidden dark:hover:bg-transparent'\r\n                    )}\r\n                >\r\n                    <div className=\"relative flex h-8 w-4 items-center justify-center\">\r\n                        <div className=\"relative size-4\">\r\n                            <span\r\n                                className={cn(\r\n                                    'bg-foreground absolute left-0 block h-0.5 w-4 transition-all duration-100',\r\n                                    open ? 'top-[0.4rem] -rotate-45' : 'top-1'\r\n                                )}\r\n                            />\r\n                            <span\r\n                                className={cn(\r\n                                    'bg-foreground absolute left-0 block h-0.5 w-4 transition-all duration-100',\r\n                                    open ? 'top-[0.4rem] rotate-45' : 'top-2.5'\r\n                                )}\r\n                            />\r\n                        </div>\r\n                        <span className=\"sr-only\">Toggle Menu</span>\r\n                    </div>\r\n                </Button>\r\n            </PopoverTrigger>\r\n            <PopoverContent\r\n                className=\"bg-background/90 no-scrollbar h-(--radix-popover-content-available-height) w-(--radix-popover-content-available-width) overflow-y-auto rounded-none border-none p-0 shadow-none backdrop-blur duration-100\"\r\n                align=\"start\"\r\n                side=\"bottom\"\r\n                alignOffset={-16}\r\n                sideOffset={14}\r\n            >\r\n                <div className=\"flex flex-col gap-12 overflow-auto px-6 py-6\">\r\n                    <div className=\"flex flex-col gap-4\">\r\n                        <div className=\"text-muted-foreground text-sm font-medium\">\r\n                            Menu\r\n                        </div>\r\n                        <div className=\"flex flex-col gap-3\">\r\n                            {navLinks.map((item, index) => (\r\n                                <MobileLink\r\n                                    key={index}\r\n                                    href={item.href}\r\n                                    onOpenChange={setOpen}\r\n                                >\r\n                                    {item.label}\r\n                                </MobileLink>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </PopoverContent>\r\n        </Popover>\r\n    )\r\n}\r\n\r\nfunction MobileLink({\r\n    href,\r\n    onOpenChange,\r\n    className,\r\n    children,\r\n    ...props\r\n}: LinkProps & {\r\n    onOpenChange?: (open: boolean) => void\r\n    children: React.ReactNode\r\n    className?: string\r\n}) {\r\n    return (\r\n        <Link\r\n            href={href}\r\n            className={cn('text-2xl font-medium', className)}\r\n            {...props}\r\n        >\r\n            {children}\r\n        </Link>\r\n    )\r\n}\r\n",
      "type": "registry:component",
      "target": "components/header.tsx"
    },
    {
      "path": "registry/default/blocks/hero-sections/ai-builder-hero/line.tsx",
      "content": "import { cn } from '@/lib/utils'\r\n\r\nexport default function Line({\r\n    className,\r\n    ...props\r\n}: React.ComponentProps<'div'>) {\r\n    return (\r\n        <span\r\n            className={cn('border-border relative w-full border-t', className)}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n",
      "type": "registry:ui",
      "target": "components/ui/line.tsx"
    },
    {
      "path": "registry/default/components/input/prompt-input-02.tsx",
      "content": "'use client'\r\n\r\nimport { Button } from '@/components/ui/button'\r\nimport { cn } from '@/lib/utils'\r\nimport {\r\n    CloudUploadIcon,\r\n    CornerLeftUpIcon,\r\n    GlobeIcon,\r\n    LightbulbIcon,\r\n    PaperclipIcon,\r\n} from 'lucide-react'\r\nimport {\r\n    DropdownMenu,\r\n    DropdownMenuContent,\r\n    DropdownMenuItem,\r\n    DropdownMenuSeparator,\r\n    DropdownMenuTrigger,\r\n} from '@/components/ui/dropdown-menu'\r\nimport {\r\n    Tooltip,\r\n    TooltipContent,\r\n    TooltipProvider,\r\n    TooltipTrigger,\r\n} from '@/components/ui/tooltip'\r\nimport React from 'react'\r\nimport TextareaAutosize from 'react-textarea-autosize'\r\nimport { Toggle } from '@/components/ui/toggle'\r\nimport {\r\n    Select,\r\n    SelectContent,\r\n    SelectGroup,\r\n    SelectItem,\r\n    SelectTrigger,\r\n    SelectValue,\r\n} from '@/components/ui/select'\r\n\r\nconst models = [\r\n    'GPT-4.5',\r\n    'Claude 3.7 Sonnet',\r\n    'Gemini 2.0 Pro',\r\n    'LLaMA 4',\r\n    'DeepSeek-R1',\r\n    'Qwen 3',\r\n    'Grok 3',\r\n    'Mistral Large 2',\r\n    'Gemma 3',\r\n    'Mixtral 8x22B',\r\n]\r\n\r\ntype PromptInput02Props = {\r\n    quickPrompts?: { label: string; value: string }[]\r\n}\r\n\r\nexport default function PromptInput02({ quickPrompts }: PromptInput02Props) {\r\n    const [message, setMessage] = React.useState<string>('')\r\n    const [searchToggle, setSearchToggle] = React.useState<boolean>(false)\r\n    const [reasonToggle, setReasonToggle] = React.useState<boolean>(false)\r\n    const [model, setModel] = React.useState<string>(models[0])\r\n\r\n    const handleSubmit = () => {\r\n        if (message.trim() === '') return\r\n        // Handle message submission logic here\r\n        console.log('Message submitted:', message)\r\n        console.log(\r\n            'Search toggle state:',\r\n            searchToggle ? 'Enabled' : 'Disabled'\r\n        )\r\n        console.log(\r\n            'Reason toggle state:',\r\n            reasonToggle ? 'Enabled' : 'Disabled'\r\n        )\r\n        setMessage('')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className={cn(\r\n                    'placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input rounded-xl border bg-transparent text-base shadow-xs transition-[color,box-shadow] outline-none md:text-sm',\r\n                    'focus-within:border-ring focus-within:ring-ring/50 focus-within:ring-[3px]',\r\n                    'has-aria-invalid:ring-destructive/20 dark:has-aria-invalid:ring-destructive/40 has-aria-invalid:border-destructive group',\r\n                    'flex w-full flex-col'\r\n                )}\r\n            >\r\n                <div className=\"flex items-center justify-center gap-2 p-4\">\r\n                    <TextareaAutosize\r\n                        className=\"w-full resize-none border-none bg-transparent text-base focus-visible:outline-none\"\r\n                        placeholder=\"Ask anything...\"\r\n                        minRows={1}\r\n                        rows={1}\r\n                        maxRows={6}\r\n                        value={message}\r\n                        onChange={(e) => setMessage(e.target.value)}\r\n                    />\r\n\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"ghost\"\r\n                        className=\"cursor-pointer\"\r\n                        disabled={!message || message.length === 0}\r\n                        onClick={() => handleSubmit()}\r\n                    >\r\n                        Send to AI\r\n                        <CornerLeftUpIcon />\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"border-border flex items-center justify-between border-t p-3 px-4\">\r\n                    <TooltipProvider delayDuration={0}>\r\n                        <div className=\"flex items-center gap-2\">\r\n                            <Attachments />\r\n\r\n                            <Tooltip>\r\n                                <Toggle\r\n                                    value=\"search\"\r\n                                    asChild\r\n                                    pressed={searchToggle}\r\n                                    onPressedChange={setSearchToggle}\r\n                                    className=\"cursor-pointer\"\r\n                                >\r\n                                    <TooltipTrigger>\r\n                                        <GlobeIcon />\r\n                                        <span className=\"hidden sm:block\">\r\n                                            Search\r\n                                        </span>\r\n                                    </TooltipTrigger>\r\n                                </Toggle>\r\n                                <TooltipContent>\r\n                                    <p>Search the web</p>\r\n                                </TooltipContent>\r\n                            </Tooltip>\r\n\r\n                            <Tooltip>\r\n                                <Toggle\r\n                                    value=\"reason\"\r\n                                    asChild\r\n                                    pressed={reasonToggle}\r\n                                    onPressedChange={setReasonToggle}\r\n                                    className=\"cursor-pointer\"\r\n                                >\r\n                                    <TooltipTrigger>\r\n                                        <LightbulbIcon />\r\n                                        <span className=\"hidden sm:block\">\r\n                                            Reason\r\n                                        </span>\r\n                                    </TooltipTrigger>\r\n                                </Toggle>\r\n                                <TooltipContent>\r\n                                    <p>Think before responding</p>\r\n                                </TooltipContent>\r\n                            </Tooltip>\r\n                        </div>\r\n                    </TooltipProvider>\r\n\r\n                    <Select value={model} onValueChange={setModel}>\r\n                        <SelectTrigger className=\"max-w-[120px] sm:max-w-max\">\r\n                            <SelectValue placeholder=\"Select modal\" />\r\n                        </SelectTrigger>\r\n                        <SelectContent align=\"end\" side=\"top\">\r\n                            <SelectGroup>\r\n                                {models.map((model) => (\r\n                                    <SelectItem\r\n                                        key={model}\r\n                                        value={model}\r\n                                        onClick={() => setModel(model)}\r\n                                    >\r\n                                        {model}\r\n                                    </SelectItem>\r\n                                ))}\r\n                            </SelectGroup>\r\n                        </SelectContent>\r\n                    </Select>\r\n                </div>\r\n            </div>\r\n            {quickPrompts && quickPrompts.length > 0 && (\r\n                <div className=\"w-full\">\r\n                    <div className=\"mt-4 flex flex-wrap items-center gap-2\">\r\n                        {quickPrompts.map((prompt) => (\r\n                            <Button\r\n                                key={prompt.value}\r\n                                variant=\"outline\"\r\n                                size=\"sm\"\r\n                                onClick={() => setMessage(prompt.value)}\r\n                                className=\"cursor-pointer\"\r\n                            >\r\n                                {prompt.label}\r\n                            </Button>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nfunction Attachments() {\r\n    return (\r\n        <DropdownMenu>\r\n            <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                    <DropdownMenuTrigger asChild>\r\n                        <Button\r\n                            type=\"button\"\r\n                            variant=\"ghost\"\r\n                            className=\"cursor-pointer\"\r\n                        >\r\n                            <PaperclipIcon />\r\n                            <span className=\"hidden sm:block\">Attachments</span>\r\n                        </Button>\r\n                    </DropdownMenuTrigger>\r\n                </TooltipTrigger>\r\n\r\n                <TooltipContent>\r\n                    <p>Add photos and files</p>\r\n                </TooltipContent>\r\n            </Tooltip>\r\n\r\n            <DropdownMenuContent align=\"start\" side=\"top\">\r\n                <DropdownMenuItem className=\"cursor-pointer\">\r\n                    <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        viewBox=\"0 0 87.3 78\"\r\n                    >\r\n                        <path\r\n                            fill=\"#0066da\"\r\n                            d=\"m6.6 66.85 3.85 6.65c.8 1.4 1.95 2.5 3.3 3.3L27.5 53H0c0 1.55.4 3.1 1.2 4.5z\"\r\n                        />\r\n                        <path\r\n                            fill=\"#00ac47\"\r\n                            d=\"M43.65 25 29.9 1.2c-1.35.8-2.5 1.9-3.3 3.3l-25.4 44A9.06 9.06 0 0 0 0 53h27.5z\"\r\n                        />\r\n                        <path\r\n                            fill=\"#ea4335\"\r\n                            d=\"M73.55 76.8c1.35-.8 2.5-1.9 3.3-3.3l1.6-2.75L86.1 57.5c.8-1.4 1.2-2.95 1.2-4.5H59.798l5.852 11.5z\"\r\n                        />\r\n                        <path\r\n                            fill=\"#00832d\"\r\n                            d=\"M43.65 25 57.4 1.2C56.05.4 54.5 0 52.9 0H34.4c-1.6 0-3.15.45-4.5 1.2z\"\r\n                        />\r\n                        <path\r\n                            fill=\"#2684fc\"\r\n                            d=\"M59.8 53H27.5L13.75 76.8c1.35.8 2.9 1.2 4.5 1.2h50.8c1.6 0 3.15-.45 4.5-1.2z\"\r\n                        />\r\n                        <path\r\n                            fill=\"#ffba00\"\r\n                            d=\"m73.4 26.5-12.7-22c-.8-1.4-1.95-2.5-3.3-3.3L43.65 25 59.8 53h27.45c0-1.55-.4-3.1-1.2-4.5z\"\r\n                        />\r\n                    </svg>\r\n                    Connect to Google Drive\r\n                </DropdownMenuItem>\r\n                <DropdownMenuSeparator />\r\n                <DropdownMenuItem className=\"cursor-pointer\">\r\n                    <CloudUploadIcon /> Add photos and files\r\n                </DropdownMenuItem>\r\n            </DropdownMenuContent>\r\n        </DropdownMenu>\r\n    )\r\n}\r\n",
      "type": "registry:component",
      "target": "components/prompt-input-02.tsx"
    }
  ],
  "css": {
    ".container-line-wrapper": {
      "margin-left": "auto",
      "margin-right": "auto",
      "width": "100%",
      "max-width": "800px"
    },
    "@media (min-width: 800px)": {
      ".container-line-wrapper": {
        "border-top": "none",
        "border-bottom": "none",
        "border-left": "1px solid var(--border)",
        "border-right": "1px solid var(--border)"
      }
    }
  }
}