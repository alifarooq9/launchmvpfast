{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "navbar-05",
  "type": "registry:block",
  "dependencies": [
    "lucide-react",
    "@radix-ui/react-slot",
    "class-variance-authority",
    "clsx",
    "tailwind-merge",
    "@radix-ui/react-navigation-menu",
    "@radix-ui/react-separator",
    "@radix-ui/react-popover",
    "cmdk",
    "@radix-ui/react-dialog"
  ],
  "registryDependencies": [
    "utils",
    "navigation-menu",
    "button",
    "popover",
    "command",
    "https://launchmvpfast.com/r/user-profile-dropdown.json",
    "separator",
    "https://launchmvpfast.com/r/use-is-mac.json"
  ],
  "files": [
    {
      "path": "registry/default/blocks/navbar/navbar-05.tsx",
      "content": "import { buttonVariants } from '@/registry/default/ui/button'\r\nimport {\r\n    NavigationMenu,\r\n    NavigationMenuItem,\r\n    NavigationMenuList,\r\n} from '@/registry/default/ui/navigation-menu'\r\nimport { Separator } from '@/registry/default/ui/separator'\r\nimport { cn } from '@/lib/utils'\r\nimport { BellIcon, BookOpenIcon, SlashIcon } from 'lucide-react'\r\nimport UserProfileDropdown from './user-profile-dropdown'\r\nimport { TeamSwitcher } from './team-switcher'\r\nimport { Search } from './search'\r\n// import Link from 'next/link'\r\n\r\n// Sample navigation links, you can replace these with your actual links\r\nconst navigationLinks = [\r\n    { href: '#', label: 'Overview', active: true },\r\n    { href: '#', label: 'Integrations' },\r\n    { href: '#', label: 'Deployments' },\r\n    { href: '#', label: 'Domains' },\r\n    { href: '#', label: 'Usage' },\r\n    { href: '#', label: 'Storage' },\r\n    { href: '#', label: 'Settings' },\r\n]\r\n\r\nexport default function Navbar() {\r\n    const Link = 'a' // if using Next.js remove this line. you can use the Link component from 'next/link'\r\n\r\n    return (\r\n        <header className=\"border-border mt-4 flex w-full flex-col items-center justify-between gap-3 border-b px-4 xl:px-6\">\r\n            <div className=\"flex w-full items-center justify-between gap-4\">\r\n                <div className=\"flex flex-1 items-center justify-start gap-2\">\r\n                    <Link\r\n                        href=\"#\"\r\n                        className={cn(\r\n                            buttonVariants({ variant: 'ghost', size: 'icon' }),\r\n                            \"dark:hover:bg-accent text-accent-foreground [&_svg:not([class*='size-'])]:size-6\"\r\n                        )}\r\n                    >\r\n                        <svg\r\n                            viewBox=\"0 0 40 40\"\r\n                            fill=\"none\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                        >\r\n                            <path\r\n                                d=\"M11.7699 21.8258L7.42207 20.485C5 19.9996 5 20 6.6277 17.875L9.77497 13.9892C10.4003 13.2172 11.3407 12.7687 12.3342 12.7687L19.2668 13.0726M11.7699 21.8258C11.7699 21.8258 12.8773 24.5436 14.1667 25.833C15.4561 27.1223 18.1738 28.2296 18.1738 28.2296M18.1738 28.2296L19.0938 32.0266C19.5 34.5 19.5 34.5 21.6117 33.0063L25.7725 30.2146C26.684 29.603 27.2308 28.5775 27.2308 27.4798L26.927 20.733M26.927 20.733C31.5822 16.4657 34.5802 12.4926 34.9962 6.59335C35.1164 4.8888 35.1377 4.88137 33.4062 5.00345C27.507 5.41937 23.534 8.4174 19.2668 13.0726M11.7699 31.6146C11.7699 33.4841 10.2544 34.9996 8.38495 34.9996H5V31.6146C5 29.7453 6.5155 28.2298 8.38495 28.2298C10.2544 28.2298 11.7699 29.7453 11.7699 31.6146Z\"\r\n                                fill=\"currentColor\"\r\n                            />\r\n                            <path\r\n                                d=\"M12.5 22.9996L11 20.4996C11 20.0996 16 12.9996 20 12.9996C22.1667 14.8329 26.1172 16.4682 27 19.9996C27.5 21.9996 21.5 26.1663 18.5 28.4996L12.5 22.9996Z\"\r\n                                fill=\"currentColor\"\r\n                            />\r\n                        </svg>\r\n                    </Link>\r\n\r\n                    <SlashIcon className=\"text-muted size-4 -rotate-[20deg]\" />\r\n\r\n                    <TeamSwitcher />\r\n                </div>\r\n\r\n                <div className=\"flex flex-1 items-center justify-end gap-4\">\r\n                    <Search />\r\n\r\n                    <Separator\r\n                        orientation=\"vertical\"\r\n                        className=\"data-[orientation=vertical]:h-5\"\r\n                    />\r\n\r\n                    <div className=\"flex items-center gap-1.5\">\r\n                        <Link\r\n                            href=\"#\"\r\n                            className={cn(\r\n                                buttonVariants({\r\n                                    variant: 'outline',\r\n                                    size: 'icon',\r\n                                }),\r\n                                'size-8'\r\n                            )}\r\n                        >\r\n                            <BellIcon />\r\n                        </Link>\r\n\r\n                        <Link\r\n                            href=\"#\"\r\n                            className={cn(\r\n                                buttonVariants({\r\n                                    variant: 'outline',\r\n                                    size: 'icon',\r\n                                }),\r\n                                'size-8'\r\n                            )}\r\n                        >\r\n                            <BookOpenIcon />\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <Separator\r\n                        orientation=\"vertical\"\r\n                        className=\"data-[orientation=vertical]:h-5\"\r\n                    />\r\n\r\n                    <UserProfileDropdown align=\"end\" size={8} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"flex w-full items-center justify-start pb-1.5\">\r\n                <NavigationMenu className=\"max-md:hidden\">\r\n                    <NavigationMenuList>\r\n                        {navigationLinks.map((link, index) => (\r\n                            <NavigationMenuItem key={index} asChild>\r\n                                <Link\r\n                                    href={link.href}\r\n                                    data-active={link.active}\r\n                                    className=\"text-foreground/60 data-[active=true]:text-accent-foreground data-[active=true]:hover:bg-accent hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus-visible:ring-ring/50 [&_svg:not([class*='text-'])]:text-muted-foreground data-[active=true]:before:border-accent-foreground flex flex-col gap-1 rounded-md p-2 px-3 py-1.5 text-sm font-normal transition-all outline-none focus-visible:ring-[3px] focus-visible:outline-1 data-[active=true]:relative data-[active=true]:bg-transparent data-[active=true]:before:absolute data-[active=true]:before:right-0 data-[active=true]:before:bottom-[-0.375rem] data-[active=true]:before:left-0 data-[active=true]:before:border-b-2 data-[active=true]:before:content-[''] [&_svg:not([class*='size-'])]:size-4\"\r\n                                >\r\n                                    {link.label}\r\n                                </Link>\r\n                            </NavigationMenuItem>\r\n                        ))}\r\n                    </NavigationMenuList>\r\n                </NavigationMenu>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n",
      "type": "registry:component",
      "target": "components/navbar.tsx"
    },
    {
      "path": "registry/default/blocks/navbar/team-switcher.tsx",
      "content": "'use client'\r\n\r\nimport { Button } from '@/registry/default/ui/button'\r\nimport { cn } from '@/lib/utils'\r\nimport {\r\n    Popover,\r\n    PopoverContent,\r\n    PopoverTrigger,\r\n} from '@/registry/default/ui/popover'\r\nimport {\r\n    Command,\r\n    CommandEmpty,\r\n    CommandGroup,\r\n    CommandInput,\r\n    CommandItem,\r\n    CommandList,\r\n    CommandSeparator,\r\n} from '@/registry/default/ui/command'\r\nimport { ChevronsUpDownIcon, CheckIcon, PlusCircleIcon } from 'lucide-react'\r\nimport React from 'react'\r\n\r\nconst defaultTeams = [\r\n    { id: 'alifarooq', name: \"Ali Farooq's Team\" },\r\n    { id: 'shadcn', name: \"Shad CN's Team\" },\r\n    { id: 'leerob', name: \"Lee Robinson's Team\" },\r\n]\r\n\r\nexport function TeamSwitcher() {\r\n    const [team, setTeam] = React.useState(defaultTeams[0])\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const onCreateNewTeam = () => {\r\n        // Logic to create a new team can be added here\r\n    }\r\n\r\n    return (\r\n        <Popover open={open} onOpenChange={setOpen}>\r\n            <PopoverTrigger asChild>\r\n                <Button\r\n                    variant=\"ghost\"\r\n                    size=\"sm\"\r\n                    role=\"combobox\"\r\n                    aria-expanded={open}\r\n                    className={cn(\r\n                        \"dark:hover:bg-accent max-w-[180px] cursor-pointer justify-start px-2 has-[>svg]:px-2 [&_svg:not([class*='size-'])]:size-3\"\r\n                    )}\r\n                >\r\n                    <div className=\"size-5 shrink-0 rounded-full bg-white\" />\r\n                    <p className=\"truncate\">{team.name}</p>\r\n                    <ChevronsUpDownIcon />\r\n                </Button>\r\n            </PopoverTrigger>\r\n            <PopoverContent className=\"p-0\" align=\"start\">\r\n                <Command>\r\n                    <CommandInput placeholder=\"Search team...\" />\r\n                    <CommandList>\r\n                        <CommandEmpty>No team found.</CommandEmpty>\r\n                        <CommandGroup className=\"max-h-60 overflow-y-auto\">\r\n                            {defaultTeams.map((teamOption) => (\r\n                                <CommandItem\r\n                                    key={teamOption.id}\r\n                                    value={teamOption.id}\r\n                                    onSelect={(currentValue) => {\r\n                                        setTeam(\r\n                                            defaultTeams.find(\r\n                                                (t) => t.id === currentValue\r\n                                            ) || defaultTeams[0]\r\n                                        )\r\n                                        setOpen(false)\r\n                                    }}\r\n                                    className=\"flex items-center gap-3\"\r\n                                >\r\n                                    <div className=\"size-5 rounded-full bg-white\" />\r\n                                    {teamOption.name}\r\n                                    <CheckIcon\r\n                                        className={cn(\r\n                                            'ml-auto h-4 w-4',\r\n                                            team.id === teamOption.id\r\n                                                ? 'opacity-100'\r\n                                                : 'opacity-0'\r\n                                        )}\r\n                                    />\r\n                                </CommandItem>\r\n                            ))}\r\n                        </CommandGroup>\r\n                        <CommandSeparator />\r\n                        <CommandGroup>\r\n                            <CommandItem onSelect={onCreateNewTeam}>\r\n                                <PlusCircleIcon />\r\n                                Create new team\r\n                            </CommandItem>\r\n                        </CommandGroup>\r\n                    </CommandList>\r\n                </Command>\r\n            </PopoverContent>\r\n        </Popover>\r\n    )\r\n}\r\n",
      "type": "registry:component",
      "target": "components/team-switcher.tsx"
    },
    {
      "path": "registry/default/blocks/navbar/search.tsx",
      "content": "'use client'\r\n\r\nimport { Button } from '@/registry/default/ui/button'\r\nimport { cn } from '@/lib/utils'\r\nimport { useIsMac } from '@/registry/default/hooks/use-is-mac'\r\n\r\nexport function Search({ className }: React.ComponentProps<'button'>) {\r\n    const isMac = useIsMac()\r\n\r\n    return (\r\n        <Button\r\n            variant=\"secondary\"\r\n            className={cn(\r\n                'bg-surface text-surface-foreground/60 dark:bg-card relative h-8 w-full justify-start pl-2.5 font-normal shadow-none sm:pr-12 md:w-40 lg:w-56 xl:w-64',\r\n                className\r\n            )}\r\n        >\r\n            <span className=\"hidden lg:inline-flex\">Search...</span>\r\n            <span className=\"inline-flex lg:hidden\">Search...</span>\r\n            <div className=\"absolute top-1.5 right-1.5 hidden gap-1 sm:flex\">\r\n                <CommandMenuKbd>{isMac ? '⌘' : 'Ctrl'}</CommandMenuKbd>\r\n                <CommandMenuKbd className=\"aspect-square\">K</CommandMenuKbd>\r\n            </div>\r\n        </Button>\r\n    )\r\n}\r\n\r\nfunction CommandMenuKbd({ className, ...props }: React.ComponentProps<'kbd'>) {\r\n    return (\r\n        <kbd\r\n            className={cn(\r\n                \"bg-background text-muted-foreground pointer-events-none flex h-5 items-center justify-center gap-1 rounded border px-1 font-sans text-[0.7rem] font-medium select-none [&_svg:not([class*='size-'])]:size-3\",\r\n                className\r\n            )}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n",
      "type": "registry:component",
      "target": "components/search.tsx"
    },
    {
      "path": "registry\\default\\blocks\\navbar\\navbar-05.tsx",
      "content": "import { buttonVariants } from '@/registry/default/ui/button'\r\nimport {\r\n    NavigationMenu,\r\n    NavigationMenuItem,\r\n    NavigationMenuList,\r\n} from '@/registry/default/ui/navigation-menu'\r\nimport { Separator } from '@/registry/default/ui/separator'\r\nimport { cn } from '@/lib/utils'\r\nimport { BellIcon, BookOpenIcon, SlashIcon } from 'lucide-react'\r\nimport UserProfileDropdown from './user-profile-dropdown'\r\nimport { TeamSwitcher } from './team-switcher'\r\nimport { Search } from './search'\r\n// import Link from 'next/link'\r\n\r\n// Sample navigation links, you can replace these with your actual links\r\nconst navigationLinks = [\r\n    { href: '#', label: 'Overview', active: true },\r\n    { href: '#', label: 'Integrations' },\r\n    { href: '#', label: 'Deployments' },\r\n    { href: '#', label: 'Domains' },\r\n    { href: '#', label: 'Usage' },\r\n    { href: '#', label: 'Storage' },\r\n    { href: '#', label: 'Settings' },\r\n]\r\n\r\nexport default function Navbar() {\r\n    const Link = 'a' // if using Next.js remove this line. you can use the Link component from 'next/link'\r\n\r\n    return (\r\n        <header className=\"border-border mt-4 flex w-full flex-col items-center justify-between gap-3 border-b px-4 xl:px-6\">\r\n            <div className=\"flex w-full items-center justify-between gap-4\">\r\n                <div className=\"flex flex-1 items-center justify-start gap-2\">\r\n                    <Link\r\n                        href=\"#\"\r\n                        className={cn(\r\n                            buttonVariants({ variant: 'ghost', size: 'icon' }),\r\n                            \"dark:hover:bg-accent text-accent-foreground [&_svg:not([class*='size-'])]:size-6\"\r\n                        )}\r\n                    >\r\n                        <svg\r\n                            viewBox=\"0 0 40 40\"\r\n                            fill=\"none\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                        >\r\n                            <path\r\n                                d=\"M11.7699 21.8258L7.42207 20.485C5 19.9996 5 20 6.6277 17.875L9.77497 13.9892C10.4003 13.2172 11.3407 12.7687 12.3342 12.7687L19.2668 13.0726M11.7699 21.8258C11.7699 21.8258 12.8773 24.5436 14.1667 25.833C15.4561 27.1223 18.1738 28.2296 18.1738 28.2296M18.1738 28.2296L19.0938 32.0266C19.5 34.5 19.5 34.5 21.6117 33.0063L25.7725 30.2146C26.684 29.603 27.2308 28.5775 27.2308 27.4798L26.927 20.733M26.927 20.733C31.5822 16.4657 34.5802 12.4926 34.9962 6.59335C35.1164 4.8888 35.1377 4.88137 33.4062 5.00345C27.507 5.41937 23.534 8.4174 19.2668 13.0726M11.7699 31.6146C11.7699 33.4841 10.2544 34.9996 8.38495 34.9996H5V31.6146C5 29.7453 6.5155 28.2298 8.38495 28.2298C10.2544 28.2298 11.7699 29.7453 11.7699 31.6146Z\"\r\n                                fill=\"currentColor\"\r\n                            />\r\n                            <path\r\n                                d=\"M12.5 22.9996L11 20.4996C11 20.0996 16 12.9996 20 12.9996C22.1667 14.8329 26.1172 16.4682 27 19.9996C27.5 21.9996 21.5 26.1663 18.5 28.4996L12.5 22.9996Z\"\r\n                                fill=\"currentColor\"\r\n                            />\r\n                        </svg>\r\n                    </Link>\r\n\r\n                    <SlashIcon className=\"text-muted size-4 -rotate-[20deg]\" />\r\n\r\n                    <TeamSwitcher />\r\n                </div>\r\n\r\n                <div className=\"flex flex-1 items-center justify-end gap-4\">\r\n                    <Search />\r\n\r\n                    <Separator\r\n                        orientation=\"vertical\"\r\n                        className=\"data-[orientation=vertical]:h-5\"\r\n                    />\r\n\r\n                    <div className=\"flex items-center gap-1.5\">\r\n                        <Link\r\n                            href=\"#\"\r\n                            className={cn(\r\n                                buttonVariants({\r\n                                    variant: 'outline',\r\n                                    size: 'icon',\r\n                                }),\r\n                                'size-8'\r\n                            )}\r\n                        >\r\n                            <BellIcon />\r\n                        </Link>\r\n\r\n                        <Link\r\n                            href=\"#\"\r\n                            className={cn(\r\n                                buttonVariants({\r\n                                    variant: 'outline',\r\n                                    size: 'icon',\r\n                                }),\r\n                                'size-8'\r\n                            )}\r\n                        >\r\n                            <BookOpenIcon />\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <Separator\r\n                        orientation=\"vertical\"\r\n                        className=\"data-[orientation=vertical]:h-5\"\r\n                    />\r\n\r\n                    <UserProfileDropdown align=\"end\" size={8} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"flex w-full items-center justify-start pb-1.5\">\r\n                <NavigationMenu className=\"max-md:hidden\">\r\n                    <NavigationMenuList>\r\n                        {navigationLinks.map((link, index) => (\r\n                            <NavigationMenuItem key={index} asChild>\r\n                                <Link\r\n                                    href={link.href}\r\n                                    data-active={link.active}\r\n                                    className=\"text-foreground/60 data-[active=true]:text-accent-foreground data-[active=true]:hover:bg-accent hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus-visible:ring-ring/50 [&_svg:not([class*='text-'])]:text-muted-foreground data-[active=true]:before:border-accent-foreground flex flex-col gap-1 rounded-md p-2 px-3 py-1.5 text-sm font-normal transition-all outline-none focus-visible:ring-[3px] focus-visible:outline-1 data-[active=true]:relative data-[active=true]:bg-transparent data-[active=true]:before:absolute data-[active=true]:before:right-0 data-[active=true]:before:bottom-[-0.375rem] data-[active=true]:before:left-0 data-[active=true]:before:border-b-2 data-[active=true]:before:content-[''] [&_svg:not([class*='size-'])]:size-4\"\r\n                                >\r\n                                    {link.label}\r\n                                </Link>\r\n                            </NavigationMenuItem>\r\n                        ))}\r\n                    </NavigationMenuList>\r\n                </NavigationMenu>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "registry\\default\\ui\\button.tsx",
      "content": "import * as React from 'react'\r\nimport { Slot } from '@radix-ui/react-slot'\r\nimport { cva, type VariantProps } from 'class-variance-authority'\r\n\r\nimport { cn } from '@/lib/utils'\r\n\r\nconst buttonVariants = cva(\r\n    \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n    {\r\n        variants: {\r\n            variant: {\r\n                default:\r\n                    'bg-primary text-primary-foreground shadow-xs hover:bg-primary/90',\r\n                destructive:\r\n                    'bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60',\r\n                outline:\r\n                    'border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50',\r\n                secondary:\r\n                    'bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80',\r\n                ghost: 'hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50',\r\n                link: 'text-primary underline-offset-4 hover:underline',\r\n            },\r\n            size: {\r\n                default: 'h-9 px-4 py-2 has-[>svg]:px-3',\r\n                sm: 'h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5',\r\n                lg: 'h-10 rounded-md px-6 has-[>svg]:px-4',\r\n                icon: 'size-9',\r\n            },\r\n        },\r\n        defaultVariants: {\r\n            variant: 'default',\r\n            size: 'default',\r\n        },\r\n    }\r\n)\r\n\r\nfunction Button({\r\n    className,\r\n    variant,\r\n    size,\r\n    asChild = false,\r\n    ...props\r\n}: React.ComponentProps<'button'> &\r\n    VariantProps<typeof buttonVariants> & {\r\n        asChild?: boolean\r\n    }) {\r\n    const Comp = asChild ? Slot : 'button'\r\n\r\n    return (\r\n        <Comp\r\n            data-slot=\"button\"\r\n            className={cn(buttonVariants({ variant, size, className }))}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nexport { Button, buttonVariants }\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry\\default\\ui\\navigation-menu.tsx",
      "content": "import * as React from 'react'\r\nimport * as NavigationMenuPrimitive from '@radix-ui/react-navigation-menu'\r\nimport { cva } from 'class-variance-authority'\r\nimport { ChevronDownIcon } from 'lucide-react'\r\n\r\nimport { cn } from '@/lib/utils'\r\n\r\nfunction NavigationMenu({\r\n    className,\r\n    children,\r\n    viewport = true,\r\n    ...props\r\n}: React.ComponentProps<typeof NavigationMenuPrimitive.Root> & {\r\n    viewport?: boolean\r\n}) {\r\n    return (\r\n        <NavigationMenuPrimitive.Root\r\n            data-slot=\"navigation-menu\"\r\n            data-viewport={viewport}\r\n            className={cn(\r\n                'group/navigation-menu relative flex max-w-max flex-1 items-center justify-center',\r\n                className\r\n            )}\r\n            {...props}\r\n        >\r\n            {children}\r\n            {viewport && <NavigationMenuViewport />}\r\n        </NavigationMenuPrimitive.Root>\r\n    )\r\n}\r\n\r\nfunction NavigationMenuList({\r\n    className,\r\n    ...props\r\n}: React.ComponentProps<typeof NavigationMenuPrimitive.List>) {\r\n    return (\r\n        <NavigationMenuPrimitive.List\r\n            data-slot=\"navigation-menu-list\"\r\n            className={cn(\r\n                'group flex flex-1 list-none items-center justify-center gap-1',\r\n                className\r\n            )}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nfunction NavigationMenuItem({\r\n    className,\r\n    ...props\r\n}: React.ComponentProps<typeof NavigationMenuPrimitive.Item>) {\r\n    return (\r\n        <NavigationMenuPrimitive.Item\r\n            data-slot=\"navigation-menu-item\"\r\n            className={cn('relative', className)}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nconst navigationMenuTriggerStyle = cva(\r\n    'group inline-flex h-9 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground disabled:pointer-events-none disabled:opacity-50 data-[state=open]:hover:bg-accent data-[state=open]:text-accent-foreground data-[state=open]:focus:bg-accent data-[state=open]:bg-accent/50 focus-visible:ring-ring/50 outline-none transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1'\r\n)\r\n\r\nfunction NavigationMenuTrigger({\r\n    className,\r\n    children,\r\n    ...props\r\n}: React.ComponentProps<typeof NavigationMenuPrimitive.Trigger>) {\r\n    return (\r\n        <NavigationMenuPrimitive.Trigger\r\n            data-slot=\"navigation-menu-trigger\"\r\n            className={cn(navigationMenuTriggerStyle(), 'group', className)}\r\n            {...props}\r\n        >\r\n            {children}{' '}\r\n            <ChevronDownIcon\r\n                className=\"relative top-[1px] ml-1 size-3 transition duration-300 group-data-[state=open]:rotate-180\"\r\n                aria-hidden=\"true\"\r\n            />\r\n        </NavigationMenuPrimitive.Trigger>\r\n    )\r\n}\r\n\r\nfunction NavigationMenuContent({\r\n    className,\r\n    ...props\r\n}: React.ComponentProps<typeof NavigationMenuPrimitive.Content>) {\r\n    return (\r\n        <NavigationMenuPrimitive.Content\r\n            data-slot=\"navigation-menu-content\"\r\n            className={cn(\r\n                'data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 top-0 left-0 w-full p-2 pr-2.5 md:absolute md:w-auto',\r\n                'group-data-[viewport=false]/navigation-menu:bg-popover group-data-[viewport=false]/navigation-menu:text-popover-foreground group-data-[viewport=false]/navigation-menu:data-[state=open]:animate-in group-data-[viewport=false]/navigation-menu:data-[state=closed]:animate-out group-data-[viewport=false]/navigation-menu:data-[state=closed]:zoom-out-95 group-data-[viewport=false]/navigation-menu:data-[state=open]:zoom-in-95 group-data-[viewport=false]/navigation-menu:data-[state=open]:fade-in-0 group-data-[viewport=false]/navigation-menu:data-[state=closed]:fade-out-0 group-data-[viewport=false]/navigation-menu:top-full group-data-[viewport=false]/navigation-menu:mt-1.5 group-data-[viewport=false]/navigation-menu:overflow-hidden group-data-[viewport=false]/navigation-menu:rounded-md group-data-[viewport=false]/navigation-menu:border group-data-[viewport=false]/navigation-menu:shadow group-data-[viewport=false]/navigation-menu:duration-200 **:data-[slot=navigation-menu-link]:focus:ring-0 **:data-[slot=navigation-menu-link]:focus:outline-none',\r\n                className\r\n            )}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nfunction NavigationMenuViewport({\r\n    className,\r\n    ...props\r\n}: React.ComponentProps<typeof NavigationMenuPrimitive.Viewport>) {\r\n    return (\r\n        <div\r\n            className={cn(\r\n                'absolute top-full left-0 isolate z-50 flex justify-center'\r\n            )}\r\n        >\r\n            <NavigationMenuPrimitive.Viewport\r\n                data-slot=\"navigation-menu-viewport\"\r\n                className={cn(\r\n                    'origin-top-center bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border shadow md:w-[var(--radix-navigation-menu-viewport-width)]',\r\n                    className\r\n                )}\r\n                {...props}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction NavigationMenuLink({\r\n    className,\r\n    ...props\r\n}: React.ComponentProps<typeof NavigationMenuPrimitive.Link>) {\r\n    return (\r\n        <NavigationMenuPrimitive.Link\r\n            data-slot=\"navigation-menu-link\"\r\n            className={cn(\r\n                \"data-[active=true]:focus:bg-accent data-[active=true]:hover:bg-accent data-[active=true]:bg-accent/50 data-[active=true]:text-accent-foreground hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus-visible:ring-ring/50 [&_svg:not([class*='text-'])]:text-muted-foreground flex flex-col gap-1 rounded-sm p-2 text-sm transition-all outline-none focus-visible:ring-[3px] focus-visible:outline-1 [&_svg:not([class*='size-'])]:size-4\",\r\n                className\r\n            )}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nfunction NavigationMenuIndicator({\r\n    className,\r\n    ...props\r\n}: React.ComponentProps<typeof NavigationMenuPrimitive.Indicator>) {\r\n    return (\r\n        <NavigationMenuPrimitive.Indicator\r\n            data-slot=\"navigation-menu-indicator\"\r\n            className={cn(\r\n                'data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden',\r\n                className\r\n            )}\r\n            {...props}\r\n        >\r\n            <div className=\"bg-border relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm shadow-md\" />\r\n        </NavigationMenuPrimitive.Indicator>\r\n    )\r\n}\r\n\r\nexport {\r\n    NavigationMenu,\r\n    NavigationMenuList,\r\n    NavigationMenuItem,\r\n    NavigationMenuContent,\r\n    NavigationMenuTrigger,\r\n    NavigationMenuLink,\r\n    NavigationMenuIndicator,\r\n    NavigationMenuViewport,\r\n    navigationMenuTriggerStyle,\r\n}\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry\\default\\ui\\separator.tsx",
      "content": "'use client'\r\n\r\nimport * as React from 'react'\r\nimport * as SeparatorPrimitive from '@radix-ui/react-separator'\r\n\r\nimport { cn } from '@/lib/utils'\r\n\r\nfunction Separator({\r\n    className,\r\n    orientation = 'horizontal',\r\n    decorative = true,\r\n    ...props\r\n}: React.ComponentProps<typeof SeparatorPrimitive.Root>) {\r\n    return (\r\n        <SeparatorPrimitive.Root\r\n            data-slot=\"separator\"\r\n            decorative={decorative}\r\n            orientation={orientation}\r\n            className={cn(\r\n                'bg-border shrink-0 data-[orientation=horizontal]:h-px data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-px',\r\n                className\r\n            )}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nexport { Separator }\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry\\default\\blocks\\navbar\\user-profile-dropdown.tsx",
      "content": "export { default } from '@/registry/default/components/dropdown-menu/user-profile-dropdown'\r\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "registry\\default\\blocks\\navbar\\team-switcher.tsx",
      "content": "'use client'\r\n\r\nimport { Button } from '@/registry/default/ui/button'\r\nimport { cn } from '@/lib/utils'\r\nimport {\r\n    Popover,\r\n    PopoverContent,\r\n    PopoverTrigger,\r\n} from '@/registry/default/ui/popover'\r\nimport {\r\n    Command,\r\n    CommandEmpty,\r\n    CommandGroup,\r\n    CommandInput,\r\n    CommandItem,\r\n    CommandList,\r\n    CommandSeparator,\r\n} from '@/registry/default/ui/command'\r\nimport { ChevronsUpDownIcon, CheckIcon, PlusCircleIcon } from 'lucide-react'\r\nimport React from 'react'\r\n\r\nconst defaultTeams = [\r\n    { id: 'alifarooq', name: \"Ali Farooq's Team\" },\r\n    { id: 'shadcn', name: \"Shad CN's Team\" },\r\n    { id: 'leerob', name: \"Lee Robinson's Team\" },\r\n]\r\n\r\nexport function TeamSwitcher() {\r\n    const [team, setTeam] = React.useState(defaultTeams[0])\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const onCreateNewTeam = () => {\r\n        // Logic to create a new team can be added here\r\n    }\r\n\r\n    return (\r\n        <Popover open={open} onOpenChange={setOpen}>\r\n            <PopoverTrigger asChild>\r\n                <Button\r\n                    variant=\"ghost\"\r\n                    size=\"sm\"\r\n                    role=\"combobox\"\r\n                    aria-expanded={open}\r\n                    className={cn(\r\n                        \"dark:hover:bg-accent max-w-[180px] cursor-pointer justify-start px-2 has-[>svg]:px-2 [&_svg:not([class*='size-'])]:size-3\"\r\n                    )}\r\n                >\r\n                    <div className=\"size-5 shrink-0 rounded-full bg-white\" />\r\n                    <p className=\"truncate\">{team.name}</p>\r\n                    <ChevronsUpDownIcon />\r\n                </Button>\r\n            </PopoverTrigger>\r\n            <PopoverContent className=\"p-0\" align=\"start\">\r\n                <Command>\r\n                    <CommandInput placeholder=\"Search team...\" />\r\n                    <CommandList>\r\n                        <CommandEmpty>No team found.</CommandEmpty>\r\n                        <CommandGroup className=\"max-h-60 overflow-y-auto\">\r\n                            {defaultTeams.map((teamOption) => (\r\n                                <CommandItem\r\n                                    key={teamOption.id}\r\n                                    value={teamOption.id}\r\n                                    onSelect={(currentValue) => {\r\n                                        setTeam(\r\n                                            defaultTeams.find(\r\n                                                (t) => t.id === currentValue\r\n                                            ) || defaultTeams[0]\r\n                                        )\r\n                                        setOpen(false)\r\n                                    }}\r\n                                    className=\"flex items-center gap-3\"\r\n                                >\r\n                                    <div className=\"size-5 rounded-full bg-white\" />\r\n                                    {teamOption.name}\r\n                                    <CheckIcon\r\n                                        className={cn(\r\n                                            'ml-auto h-4 w-4',\r\n                                            team.id === teamOption.id\r\n                                                ? 'opacity-100'\r\n                                                : 'opacity-0'\r\n                                        )}\r\n                                    />\r\n                                </CommandItem>\r\n                            ))}\r\n                        </CommandGroup>\r\n                        <CommandSeparator />\r\n                        <CommandGroup>\r\n                            <CommandItem onSelect={onCreateNewTeam}>\r\n                                <PlusCircleIcon />\r\n                                Create new team\r\n                            </CommandItem>\r\n                        </CommandGroup>\r\n                    </CommandList>\r\n                </Command>\r\n            </PopoverContent>\r\n        </Popover>\r\n    )\r\n}\r\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "registry\\default\\blocks\\navbar\\search.tsx",
      "content": "'use client'\r\n\r\nimport { Button } from '@/registry/default/ui/button'\r\nimport { cn } from '@/lib/utils'\r\nimport { useIsMac } from '@/registry/default/hooks/use-is-mac'\r\n\r\nexport function Search({ className }: React.ComponentProps<'button'>) {\r\n    const isMac = useIsMac()\r\n\r\n    return (\r\n        <Button\r\n            variant=\"secondary\"\r\n            className={cn(\r\n                'bg-surface text-surface-foreground/60 dark:bg-card relative h-8 w-full justify-start pl-2.5 font-normal shadow-none sm:pr-12 md:w-40 lg:w-56 xl:w-64',\r\n                className\r\n            )}\r\n        >\r\n            <span className=\"hidden lg:inline-flex\">Search...</span>\r\n            <span className=\"inline-flex lg:hidden\">Search...</span>\r\n            <div className=\"absolute top-1.5 right-1.5 hidden gap-1 sm:flex\">\r\n                <CommandMenuKbd>{isMac ? '⌘' : 'Ctrl'}</CommandMenuKbd>\r\n                <CommandMenuKbd className=\"aspect-square\">K</CommandMenuKbd>\r\n            </div>\r\n        </Button>\r\n    )\r\n}\r\n\r\nfunction CommandMenuKbd({ className, ...props }: React.ComponentProps<'kbd'>) {\r\n    return (\r\n        <kbd\r\n            className={cn(\r\n                \"bg-background text-muted-foreground pointer-events-none flex h-5 items-center justify-center gap-1 rounded border px-1 font-sans text-[0.7rem] font-medium select-none [&_svg:not([class*='size-'])]:size-3\",\r\n                className\r\n            )}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "registry\\default\\ui\\popover.tsx",
      "content": "'use client'\r\n\r\nimport * as React from 'react'\r\nimport * as PopoverPrimitive from '@radix-ui/react-popover'\r\n\r\nimport { cn } from '@/lib/utils'\r\n\r\nfunction Popover({\r\n    ...props\r\n}: React.ComponentProps<typeof PopoverPrimitive.Root>) {\r\n    return <PopoverPrimitive.Root data-slot=\"popover\" {...props} />\r\n}\r\n\r\nfunction PopoverTrigger({\r\n    ...props\r\n}: React.ComponentProps<typeof PopoverPrimitive.Trigger>) {\r\n    return <PopoverPrimitive.Trigger data-slot=\"popover-trigger\" {...props} />\r\n}\r\n\r\nfunction PopoverContent({\r\n    className,\r\n    align = 'center',\r\n    sideOffset = 4,\r\n    ...props\r\n}: React.ComponentProps<typeof PopoverPrimitive.Content>) {\r\n    return (\r\n        <PopoverPrimitive.Portal>\r\n            <PopoverPrimitive.Content\r\n                data-slot=\"popover-content\"\r\n                align={align}\r\n                sideOffset={sideOffset}\r\n                className={cn(\r\n                    'bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-72 origin-(--radix-popover-content-transform-origin) rounded-md border p-4 shadow-md outline-hidden',\r\n                    className\r\n                )}\r\n                {...props}\r\n            />\r\n        </PopoverPrimitive.Portal>\r\n    )\r\n}\r\n\r\nfunction PopoverAnchor({\r\n    ...props\r\n}: React.ComponentProps<typeof PopoverPrimitive.Anchor>) {\r\n    return <PopoverPrimitive.Anchor data-slot=\"popover-anchor\" {...props} />\r\n}\r\n\r\nexport { Popover, PopoverTrigger, PopoverContent, PopoverAnchor }\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry\\default\\ui\\command.tsx",
      "content": "'use client'\r\n\r\nimport * as React from 'react'\r\nimport { Command as CommandPrimitive } from 'cmdk'\r\nimport { SearchIcon } from 'lucide-react'\r\n\r\nimport { cn } from '@/lib/utils'\r\nimport {\r\n    Dialog,\r\n    DialogContent,\r\n    DialogDescription,\r\n    DialogHeader,\r\n    DialogTitle,\r\n} from '@/components/ui/dialog'\r\n\r\nfunction Command({\r\n    className,\r\n    ...props\r\n}: React.ComponentProps<typeof CommandPrimitive>) {\r\n    return (\r\n        <CommandPrimitive\r\n            data-slot=\"command\"\r\n            className={cn(\r\n                'bg-popover text-popover-foreground flex h-full w-full flex-col overflow-hidden rounded-md',\r\n                className\r\n            )}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nfunction CommandDialog({\r\n    title = 'Command Palette',\r\n    description = 'Search for a command to run...',\r\n    children,\r\n    className,\r\n    showCloseButton = true,\r\n    ...props\r\n}: React.ComponentProps<typeof Dialog> & {\r\n    title?: string\r\n    description?: string\r\n    className?: string\r\n    showCloseButton?: boolean\r\n}) {\r\n    return (\r\n        <Dialog {...props}>\r\n            <DialogHeader className=\"sr-only\">\r\n                <DialogTitle>{title}</DialogTitle>\r\n                <DialogDescription>{description}</DialogDescription>\r\n            </DialogHeader>\r\n            <DialogContent\r\n                className={cn('overflow-hidden p-0', className)}\r\n                showCloseButton={showCloseButton}\r\n            >\r\n                <Command className=\"[&_[cmdk-group-heading]]:text-muted-foreground **:data-[slot=command-input-wrapper]:h-12 [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group]]:px-2 [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\r\n                    {children}\r\n                </Command>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nfunction CommandInput({\r\n    className,\r\n    ...props\r\n}: React.ComponentProps<typeof CommandPrimitive.Input>) {\r\n    return (\r\n        <div\r\n            data-slot=\"command-input-wrapper\"\r\n            className=\"flex h-9 items-center gap-2 border-b px-3\"\r\n        >\r\n            <SearchIcon className=\"size-4 shrink-0 opacity-50\" />\r\n            <CommandPrimitive.Input\r\n                data-slot=\"command-input\"\r\n                className={cn(\r\n                    'placeholder:text-muted-foreground flex h-10 w-full rounded-md bg-transparent py-3 text-sm outline-hidden disabled:cursor-not-allowed disabled:opacity-50',\r\n                    className\r\n                )}\r\n                {...props}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction CommandList({\r\n    className,\r\n    ...props\r\n}: React.ComponentProps<typeof CommandPrimitive.List>) {\r\n    return (\r\n        <CommandPrimitive.List\r\n            data-slot=\"command-list\"\r\n            className={cn(\r\n                'max-h-[300px] scroll-py-1 overflow-x-hidden overflow-y-auto',\r\n                className\r\n            )}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nfunction CommandEmpty({\r\n    ...props\r\n}: React.ComponentProps<typeof CommandPrimitive.Empty>) {\r\n    return (\r\n        <CommandPrimitive.Empty\r\n            data-slot=\"command-empty\"\r\n            className=\"py-6 text-center text-sm\"\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nfunction CommandGroup({\r\n    className,\r\n    ...props\r\n}: React.ComponentProps<typeof CommandPrimitive.Group>) {\r\n    return (\r\n        <CommandPrimitive.Group\r\n            data-slot=\"command-group\"\r\n            className={cn(\r\n                'text-foreground [&_[cmdk-group-heading]]:text-muted-foreground overflow-hidden p-1 [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium',\r\n                className\r\n            )}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nfunction CommandSeparator({\r\n    className,\r\n    ...props\r\n}: React.ComponentProps<typeof CommandPrimitive.Separator>) {\r\n    return (\r\n        <CommandPrimitive.Separator\r\n            data-slot=\"command-separator\"\r\n            className={cn('bg-border -mx-1 h-px', className)}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nfunction CommandItem({\r\n    className,\r\n    ...props\r\n}: React.ComponentProps<typeof CommandPrimitive.Item>) {\r\n    return (\r\n        <CommandPrimitive.Item\r\n            data-slot=\"command-item\"\r\n            className={cn(\r\n                \"data-[selected=true]:bg-accent data-[selected=true]:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[disabled=true]:pointer-events-none data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\r\n                className\r\n            )}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nfunction CommandShortcut({\r\n    className,\r\n    ...props\r\n}: React.ComponentProps<'span'>) {\r\n    return (\r\n        <span\r\n            data-slot=\"command-shortcut\"\r\n            className={cn(\r\n                'text-muted-foreground ml-auto text-xs tracking-widest',\r\n                className\r\n            )}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nexport {\r\n    Command,\r\n    CommandDialog,\r\n    CommandInput,\r\n    CommandList,\r\n    CommandEmpty,\r\n    CommandGroup,\r\n    CommandItem,\r\n    CommandShortcut,\r\n    CommandSeparator,\r\n}\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry\\default\\hooks\\use-is-mac.ts",
      "content": "import { useEffect, useState } from 'react'\r\n\r\nexport function useIsMac() {\r\n    const [isMac, setIsMac] = useState(true)\r\n\r\n    useEffect(() => {\r\n        setIsMac(navigator.platform.toUpperCase().includes('MAC'))\r\n    }, [])\r\n\r\n    return isMac\r\n}\r\n",
      "type": "registry:hook",
      "target": ""
    },
    {
      "path": "lib\\utils.ts",
      "content": "import { clsx, type ClassValue } from 'clsx'\r\nimport { twMerge } from 'tailwind-merge'\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n    return twMerge(clsx(inputs))\r\n}\r\n\r\nexport const convertRegistryPaths = (content: string): string => {\r\n    return content\r\n        .replace(/@\\/registry\\/default\\/ui/g, '@/components/ui')\r\n        .replace(/@\\/registry\\/default\\/hooks/g, '@/hooks')\r\n        .replace(/@\\/registry\\/default\\/lib/g, '@/lib')\r\n}\r\n",
      "type": "registry:lib",
      "target": ""
    },
    {
      "path": "components\\ui\\dialog.tsx",
      "content": "'use client'\r\n\r\nimport * as React from 'react'\r\nimport * as DialogPrimitive from '@radix-ui/react-dialog'\r\nimport { XIcon } from 'lucide-react'\r\n\r\nimport { cn } from '@/lib/utils'\r\n\r\nfunction Dialog({\r\n    ...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Root>) {\r\n    return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />\r\n}\r\n\r\nfunction DialogTrigger({\r\n    ...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\r\n    return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />\r\n}\r\n\r\nfunction DialogPortal({\r\n    ...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Portal>) {\r\n    return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />\r\n}\r\n\r\nfunction DialogClose({\r\n    ...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Close>) {\r\n    return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />\r\n}\r\n\r\nfunction DialogOverlay({\r\n    className,\r\n    ...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\r\n    return (\r\n        <DialogPrimitive.Overlay\r\n            data-slot=\"dialog-overlay\"\r\n            className={cn(\r\n                'data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50',\r\n                className\r\n            )}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nfunction DialogContent({\r\n    className,\r\n    children,\r\n    showCloseButton = true,\r\n    ...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Content> & {\r\n    showCloseButton?: boolean\r\n}) {\r\n    return (\r\n        <DialogPortal data-slot=\"dialog-portal\">\r\n            <DialogOverlay />\r\n            <DialogPrimitive.Content\r\n                data-slot=\"dialog-content\"\r\n                className={cn(\r\n                    'bg-card text-card-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg',\r\n                    className\r\n                )}\r\n                {...props}\r\n            >\r\n                {children}\r\n                {showCloseButton && (\r\n                    <DialogPrimitive.Close className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\">\r\n                        <XIcon />\r\n                        <span className=\"sr-only\">Close</span>\r\n                    </DialogPrimitive.Close>\r\n                )}\r\n            </DialogPrimitive.Content>\r\n        </DialogPortal>\r\n    )\r\n}\r\n\r\nfunction DialogHeader({ className, ...props }: React.ComponentProps<'div'>) {\r\n    return (\r\n        <div\r\n            data-slot=\"dialog-header\"\r\n            className={cn(\r\n                'flex flex-col gap-2 text-center sm:text-left',\r\n                className\r\n            )}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nfunction DialogFooter({ className, ...props }: React.ComponentProps<'div'>) {\r\n    return (\r\n        <div\r\n            data-slot=\"dialog-footer\"\r\n            className={cn(\r\n                'flex flex-col-reverse gap-2 sm:flex-row sm:justify-end',\r\n                className\r\n            )}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nfunction DialogTitle({\r\n    className,\r\n    ...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Title>) {\r\n    return (\r\n        <DialogPrimitive.Title\r\n            data-slot=\"dialog-title\"\r\n            className={cn('text-lg leading-none font-semibold', className)}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nfunction DialogDescription({\r\n    className,\r\n    ...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Description>) {\r\n    return (\r\n        <DialogPrimitive.Description\r\n            data-slot=\"dialog-description\"\r\n            className={cn('text-muted-foreground text-sm', className)}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nexport {\r\n    Dialog,\r\n    DialogClose,\r\n    DialogContent,\r\n    DialogDescription,\r\n    DialogFooter,\r\n    DialogHeader,\r\n    DialogOverlay,\r\n    DialogPortal,\r\n    DialogTitle,\r\n    DialogTrigger,\r\n}\r\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}