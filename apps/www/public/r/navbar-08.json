{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "navbar-08",
  "type": "registry:block",
  "dependencies": [
    "lucide-react",
    "@radix-ui/react-slot",
    "class-variance-authority",
    "clsx",
    "tailwind-merge",
    "@radix-ui/react-separator",
    "@radix-ui/react-switch",
    "@radix-ui/react-label"
  ],
  "registryDependencies": [
    "utils",
    "button",
    "https://launchmvpfast.com/r/use-is-mac.json",
    "separator",
    "label",
    "switch"
  ],
  "files": [
    {
      "path": "registry/default/blocks/navbar/navbar-08.tsx",
      "content": "import { buttonVariants, Button } from '@/registry/default/ui/button'\r\nimport { cn } from '@/lib/utils'\r\nimport { Search } from './search'\r\nimport { Separator } from '@/registry/default/ui/separator'\r\nimport { Switch } from '@/registry/default/ui/switch'\r\nimport { Label } from '@/registry/default/ui/label'\r\nimport { BellIcon, PlusCircleIcon, SettingsIcon } from 'lucide-react'\r\n// import Link from 'next/link'\r\n\r\nexport default function Navbar() {\r\n    const Link = 'a' // if using Next.js remove this line. you can use the Link component from 'next/link'\r\n\r\n    return (\r\n        <header className=\"container mx-auto flex h-14 items-center justify-between gap-4\">\r\n            <div className=\"flex flex-1 items-center justify-start gap-4\">\r\n                <Link\r\n                    href=\"#\"\r\n                    className={cn(\r\n                        buttonVariants({ variant: 'ghost', size: 'icon' }),\r\n                        \"dark:hover:bg-accent text-accent-foreground [&_svg:not([class*='size-'])]:size-6\"\r\n                    )}\r\n                >\r\n                    <svg\r\n                        viewBox=\"0 0 40 40\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                        <path\r\n                            d=\"M11.7699 21.8258L7.42207 20.485C5 19.9996 5 20 6.6277 17.875L9.77497 13.9892C10.4003 13.2172 11.3407 12.7687 12.3342 12.7687L19.2668 13.0726M11.7699 21.8258C11.7699 21.8258 12.8773 24.5436 14.1667 25.833C15.4561 27.1223 18.1738 28.2296 18.1738 28.2296M18.1738 28.2296L19.0938 32.0266C19.5 34.5 19.5 34.5 21.6117 33.0063L25.7725 30.2146C26.684 29.603 27.2308 28.5775 27.2308 27.4798L26.927 20.733M26.927 20.733C31.5822 16.4657 34.5802 12.4926 34.9962 6.59335C35.1164 4.8888 35.1377 4.88137 33.4062 5.00345C27.507 5.41937 23.534 8.4174 19.2668 13.0726M11.7699 31.6146C11.7699 33.4841 10.2544 34.9996 8.38495 34.9996H5V31.6146C5 29.7453 6.5155 28.2298 8.38495 28.2298C10.2544 28.2298 11.7699 29.7453 11.7699 31.6146Z\"\r\n                            fill=\"currentColor\"\r\n                        />\r\n                        <path\r\n                            d=\"M12.5 22.9996L11 20.4996C11 20.0996 16 12.9996 20 12.9996C22.1667 14.8329 26.1172 16.4682 27 19.9996C27.5 21.9996 21.5 26.1663 18.5 28.4996L12.5 22.9996Z\"\r\n                            fill=\"currentColor\"\r\n                        />\r\n                    </svg>\r\n                </Link>\r\n\r\n                <Search className=\"mr-2\" />\r\n            </div>\r\n\r\n            <nav className=\"flex items-center justify-end gap-2\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                    <Switch id=\"test-mode\" className=\"cursor-pointer\" />\r\n                    <Label htmlFor=\"test-mode\" className=\"cursor-pointer\">\r\n                        Test Mode\r\n                    </Label>\r\n                </div>\r\n\r\n                <Separator\r\n                    orientation=\"vertical\"\r\n                    className=\"data-[orientation=vertical]:h-5\"\r\n                />\r\n\r\n                <Link\r\n                    href=\"#\"\r\n                    className={cn(\r\n                        buttonVariants({ variant: 'ghost', size: 'sm' }),\r\n                        'size-8 cursor-pointer'\r\n                    )}\r\n                >\r\n                    <BellIcon />\r\n                </Link>\r\n\r\n                <Separator\r\n                    orientation=\"vertical\"\r\n                    className=\"data-[orientation=vertical]:h-5\"\r\n                />\r\n\r\n                <Link\r\n                    href=\"#\"\r\n                    className={cn(\r\n                        buttonVariants({ variant: 'ghost', size: 'sm' }),\r\n                        'size-8 cursor-pointer'\r\n                    )}\r\n                >\r\n                    <SettingsIcon />\r\n                </Link>\r\n\r\n                <Separator\r\n                    orientation=\"vertical\"\r\n                    className=\"data-[orientation=vertical]:h-5\"\r\n                />\r\n\r\n                <Button\r\n                    variant=\"ghost\"\r\n                    size=\"icon\"\r\n                    className=\"size-8 cursor-pointer\"\r\n                >\r\n                    <PlusCircleIcon />\r\n                </Button>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n",
      "type": "registry:component",
      "target": "components/navbar.tsx"
    },
    {
      "path": "registry/default/blocks/navbar/search.tsx",
      "content": "'use client'\r\n\r\nimport { Button } from '@/registry/default/ui/button'\r\nimport { cn } from '@/lib/utils'\r\nimport { useIsMac } from '@/registry/default/hooks/use-is-mac'\r\n\r\nexport function Search({ className }: React.ComponentProps<'button'>) {\r\n    const isMac = useIsMac()\r\n\r\n    return (\r\n        <Button\r\n            variant=\"secondary\"\r\n            className={cn(\r\n                'bg-surface text-surface-foreground/60 dark:bg-card relative h-8 w-full justify-start pl-2.5 font-normal shadow-none sm:pr-12 md:w-40 lg:w-56 xl:w-64',\r\n                className\r\n            )}\r\n        >\r\n            <span className=\"hidden lg:inline-flex\">Search...</span>\r\n            <span className=\"inline-flex lg:hidden\">Search...</span>\r\n            <div className=\"absolute top-1.5 right-1.5 hidden gap-1 sm:flex\">\r\n                <CommandMenuKbd>{isMac ? 'âŒ˜' : 'Ctrl'}</CommandMenuKbd>\r\n                <CommandMenuKbd className=\"aspect-square\">K</CommandMenuKbd>\r\n            </div>\r\n        </Button>\r\n    )\r\n}\r\n\r\nfunction CommandMenuKbd({ className, ...props }: React.ComponentProps<'kbd'>) {\r\n    return (\r\n        <kbd\r\n            className={cn(\r\n                \"bg-background text-muted-foreground pointer-events-none flex h-5 items-center justify-center gap-1 rounded border px-1 font-sans text-[0.7rem] font-medium select-none [&_svg:not([class*='size-'])]:size-3\",\r\n                className\r\n            )}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n",
      "type": "registry:component",
      "target": "components/search.tsx"
    },
    {
      "path": "registry\\default\\blocks\\navbar\\navbar-08.tsx",
      "content": "import { buttonVariants, Button } from '@/registry/default/ui/button'\r\nimport { cn } from '@/lib/utils'\r\nimport { Search } from './search'\r\nimport { Separator } from '@/registry/default/ui/separator'\r\nimport { Switch } from '@/registry/default/ui/switch'\r\nimport { Label } from '@/registry/default/ui/label'\r\nimport { BellIcon, PlusCircleIcon, SettingsIcon } from 'lucide-react'\r\n// import Link from 'next/link'\r\n\r\nexport default function Navbar() {\r\n    const Link = 'a' // if using Next.js remove this line. you can use the Link component from 'next/link'\r\n\r\n    return (\r\n        <header className=\"container mx-auto flex h-14 items-center justify-between gap-4\">\r\n            <div className=\"flex flex-1 items-center justify-start gap-4\">\r\n                <Link\r\n                    href=\"#\"\r\n                    className={cn(\r\n                        buttonVariants({ variant: 'ghost', size: 'icon' }),\r\n                        \"dark:hover:bg-accent text-accent-foreground [&_svg:not([class*='size-'])]:size-6\"\r\n                    )}\r\n                >\r\n                    <svg\r\n                        viewBox=\"0 0 40 40\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                        <path\r\n                            d=\"M11.7699 21.8258L7.42207 20.485C5 19.9996 5 20 6.6277 17.875L9.77497 13.9892C10.4003 13.2172 11.3407 12.7687 12.3342 12.7687L19.2668 13.0726M11.7699 21.8258C11.7699 21.8258 12.8773 24.5436 14.1667 25.833C15.4561 27.1223 18.1738 28.2296 18.1738 28.2296M18.1738 28.2296L19.0938 32.0266C19.5 34.5 19.5 34.5 21.6117 33.0063L25.7725 30.2146C26.684 29.603 27.2308 28.5775 27.2308 27.4798L26.927 20.733M26.927 20.733C31.5822 16.4657 34.5802 12.4926 34.9962 6.59335C35.1164 4.8888 35.1377 4.88137 33.4062 5.00345C27.507 5.41937 23.534 8.4174 19.2668 13.0726M11.7699 31.6146C11.7699 33.4841 10.2544 34.9996 8.38495 34.9996H5V31.6146C5 29.7453 6.5155 28.2298 8.38495 28.2298C10.2544 28.2298 11.7699 29.7453 11.7699 31.6146Z\"\r\n                            fill=\"currentColor\"\r\n                        />\r\n                        <path\r\n                            d=\"M12.5 22.9996L11 20.4996C11 20.0996 16 12.9996 20 12.9996C22.1667 14.8329 26.1172 16.4682 27 19.9996C27.5 21.9996 21.5 26.1663 18.5 28.4996L12.5 22.9996Z\"\r\n                            fill=\"currentColor\"\r\n                        />\r\n                    </svg>\r\n                </Link>\r\n\r\n                <Search className=\"mr-2\" />\r\n            </div>\r\n\r\n            <nav className=\"flex items-center justify-end gap-2\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                    <Switch id=\"test-mode\" className=\"cursor-pointer\" />\r\n                    <Label htmlFor=\"test-mode\" className=\"cursor-pointer\">\r\n                        Test Mode\r\n                    </Label>\r\n                </div>\r\n\r\n                <Separator\r\n                    orientation=\"vertical\"\r\n                    className=\"data-[orientation=vertical]:h-5\"\r\n                />\r\n\r\n                <Link\r\n                    href=\"#\"\r\n                    className={cn(\r\n                        buttonVariants({ variant: 'ghost', size: 'sm' }),\r\n                        'size-8 cursor-pointer'\r\n                    )}\r\n                >\r\n                    <BellIcon />\r\n                </Link>\r\n\r\n                <Separator\r\n                    orientation=\"vertical\"\r\n                    className=\"data-[orientation=vertical]:h-5\"\r\n                />\r\n\r\n                <Link\r\n                    href=\"#\"\r\n                    className={cn(\r\n                        buttonVariants({ variant: 'ghost', size: 'sm' }),\r\n                        'size-8 cursor-pointer'\r\n                    )}\r\n                >\r\n                    <SettingsIcon />\r\n                </Link>\r\n\r\n                <Separator\r\n                    orientation=\"vertical\"\r\n                    className=\"data-[orientation=vertical]:h-5\"\r\n                />\r\n\r\n                <Button\r\n                    variant=\"ghost\"\r\n                    size=\"icon\"\r\n                    className=\"size-8 cursor-pointer\"\r\n                >\r\n                    <PlusCircleIcon />\r\n                </Button>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "registry\\default\\ui\\button.tsx",
      "content": "import * as React from 'react'\r\nimport { Slot } from '@radix-ui/react-slot'\r\nimport { cva, type VariantProps } from 'class-variance-authority'\r\n\r\nimport { cn } from '@/lib/utils'\r\n\r\nconst buttonVariants = cva(\r\n    \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n    {\r\n        variants: {\r\n            variant: {\r\n                default:\r\n                    'bg-primary text-primary-foreground shadow-xs hover:bg-primary/90',\r\n                destructive:\r\n                    'bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60',\r\n                outline:\r\n                    'border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50',\r\n                secondary:\r\n                    'bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80',\r\n                ghost: 'hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50',\r\n                link: 'text-primary underline-offset-4 hover:underline',\r\n            },\r\n            size: {\r\n                default: 'h-9 px-4 py-2 has-[>svg]:px-3',\r\n                sm: 'h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5',\r\n                lg: 'h-10 rounded-md px-6 has-[>svg]:px-4',\r\n                icon: 'size-9',\r\n            },\r\n        },\r\n        defaultVariants: {\r\n            variant: 'default',\r\n            size: 'default',\r\n        },\r\n    }\r\n)\r\n\r\nfunction Button({\r\n    className,\r\n    variant,\r\n    size,\r\n    asChild = false,\r\n    ...props\r\n}: React.ComponentProps<'button'> &\r\n    VariantProps<typeof buttonVariants> & {\r\n        asChild?: boolean\r\n    }) {\r\n    const Comp = asChild ? Slot : 'button'\r\n\r\n    return (\r\n        <Comp\r\n            data-slot=\"button\"\r\n            className={cn(buttonVariants({ variant, size, className }))}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nexport { Button, buttonVariants }\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry\\default\\blocks\\navbar\\search.tsx",
      "content": "'use client'\r\n\r\nimport { Button } from '@/registry/default/ui/button'\r\nimport { cn } from '@/lib/utils'\r\nimport { useIsMac } from '@/registry/default/hooks/use-is-mac'\r\n\r\nexport function Search({ className }: React.ComponentProps<'button'>) {\r\n    const isMac = useIsMac()\r\n\r\n    return (\r\n        <Button\r\n            variant=\"secondary\"\r\n            className={cn(\r\n                'bg-surface text-surface-foreground/60 dark:bg-card relative h-8 w-full justify-start pl-2.5 font-normal shadow-none sm:pr-12 md:w-40 lg:w-56 xl:w-64',\r\n                className\r\n            )}\r\n        >\r\n            <span className=\"hidden lg:inline-flex\">Search...</span>\r\n            <span className=\"inline-flex lg:hidden\">Search...</span>\r\n            <div className=\"absolute top-1.5 right-1.5 hidden gap-1 sm:flex\">\r\n                <CommandMenuKbd>{isMac ? 'âŒ˜' : 'Ctrl'}</CommandMenuKbd>\r\n                <CommandMenuKbd className=\"aspect-square\">K</CommandMenuKbd>\r\n            </div>\r\n        </Button>\r\n    )\r\n}\r\n\r\nfunction CommandMenuKbd({ className, ...props }: React.ComponentProps<'kbd'>) {\r\n    return (\r\n        <kbd\r\n            className={cn(\r\n                \"bg-background text-muted-foreground pointer-events-none flex h-5 items-center justify-center gap-1 rounded border px-1 font-sans text-[0.7rem] font-medium select-none [&_svg:not([class*='size-'])]:size-3\",\r\n                className\r\n            )}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "registry\\default\\ui\\separator.tsx",
      "content": "'use client'\r\n\r\nimport * as React from 'react'\r\nimport * as SeparatorPrimitive from '@radix-ui/react-separator'\r\n\r\nimport { cn } from '@/lib/utils'\r\n\r\nfunction Separator({\r\n    className,\r\n    orientation = 'horizontal',\r\n    decorative = true,\r\n    ...props\r\n}: React.ComponentProps<typeof SeparatorPrimitive.Root>) {\r\n    return (\r\n        <SeparatorPrimitive.Root\r\n            data-slot=\"separator\"\r\n            decorative={decorative}\r\n            orientation={orientation}\r\n            className={cn(\r\n                'bg-border shrink-0 data-[orientation=horizontal]:h-px data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-px',\r\n                className\r\n            )}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nexport { Separator }\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry\\default\\ui\\switch.tsx",
      "content": "'use client'\r\n\r\nimport * as React from 'react'\r\nimport * as SwitchPrimitive from '@radix-ui/react-switch'\r\n\r\nimport { cn } from '@/lib/utils'\r\n\r\nfunction Switch({\r\n    className,\r\n    ...props\r\n}: React.ComponentProps<typeof SwitchPrimitive.Root>) {\r\n    return (\r\n        <SwitchPrimitive.Root\r\n            data-slot=\"switch\"\r\n            className={cn(\r\n                'peer data-[state=checked]:bg-primary data-[state=unchecked]:bg-input focus-visible:border-ring focus-visible:ring-ring/50 dark:data-[state=unchecked]:bg-input/80 inline-flex h-[1.15rem] w-8 shrink-0 items-center rounded-full border border-transparent shadow-xs transition-all outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50',\r\n                className\r\n            )}\r\n            {...props}\r\n        >\r\n            <SwitchPrimitive.Thumb\r\n                data-slot=\"switch-thumb\"\r\n                className={cn(\r\n                    'bg-background dark:data-[state=unchecked]:bg-foreground dark:data-[state=checked]:bg-primary-foreground pointer-events-none block size-4 rounded-full ring-0 transition-transform data-[state=checked]:translate-x-[calc(100%-2px)] data-[state=unchecked]:translate-x-0'\r\n                )}\r\n            />\r\n        </SwitchPrimitive.Root>\r\n    )\r\n}\r\n\r\nexport { Switch }\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry\\default\\ui\\label.tsx",
      "content": "'use client'\r\n\r\nimport * as React from 'react'\r\nimport * as LabelPrimitive from '@radix-ui/react-label'\r\n\r\nimport { cn } from '@/lib/utils'\r\n\r\nfunction Label({\r\n    className,\r\n    ...props\r\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\r\n    return (\r\n        <LabelPrimitive.Root\r\n            data-slot=\"label\"\r\n            className={cn(\r\n                'flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50',\r\n                className\r\n            )}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nexport { Label }\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry\\default\\hooks\\use-is-mac.ts",
      "content": "import { useEffect, useState } from 'react'\r\n\r\nexport function useIsMac() {\r\n    const [isMac, setIsMac] = useState(true)\r\n\r\n    useEffect(() => {\r\n        setIsMac(navigator.platform.toUpperCase().includes('MAC'))\r\n    }, [])\r\n\r\n    return isMac\r\n}\r\n",
      "type": "registry:hook",
      "target": ""
    },
    {
      "path": "lib\\utils.ts",
      "content": "import { clsx, type ClassValue } from 'clsx'\r\nimport { twMerge } from 'tailwind-merge'\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n    return twMerge(clsx(inputs))\r\n}\r\n\r\nexport const convertRegistryPaths = (content: string): string => {\r\n    return content\r\n        .replace(/@\\/registry\\/default\\/ui/g, '@/components/ui')\r\n        .replace(/@\\/registry\\/default\\/hooks/g, '@/hooks')\r\n        .replace(/@\\/registry\\/default\\/lib/g, '@/lib')\r\n}\r\n",
      "type": "registry:lib",
      "target": ""
    }
  ]
}